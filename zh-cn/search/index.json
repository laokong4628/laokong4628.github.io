[{"categories":null,"contents":"Getting started Exiting    Shortcut Description     :qa Close all files   :qa! Close all files, abandon changes   \u0026mdash; \u0026mdash;   :w Save   :wq / :x Save and close file   \u0026mdash; \u0026mdash;   :q Close file   :q! Close file, abandon changes   \u0026mdash; \u0026mdash;   ZZ Save and quit   ZQ Quit without checking changes    Navigating    Shortcut Description     h j k l Arrow keys   \u0026lt;C-U\u0026gt; / \u0026lt;C-D\u0026gt; Page up/page down    Words    Shortcut Description     b / w Previous/next word   e / ge Previous/next end of word    Line    Shortcut Description     0 (zero) Start of line   ^ Start of line (after whitespace)   $ End of line    Character    Shortcut Description     fc Go forward to character c   Fc Go backward to character c    Document    Shortcut Description     gg First line   G Last line   :n Go to line n   nG Go to line n    Window    Shortcut Description     zz Center this line   H Move to top of screen   M Move to middle of screen   L Move to bottom of screen    Tab pages    Shortcut Description     :tabedit [file] Edit file in a new tab   :tabfind [file] Open file if exists in new tab   :tabclose Close current tab   :tabs List all tabs   :tabfirst Go to first tab   :tablast Go to last tab   :tabn Go to next tab   :tabp Go to previous tab    Editing    Shortcut Description     a Append   i Insert   o Next line   O Previous line       s Delete char and insert   S Delete line and insert   C Delete until end of line and insert       r Replace one character   R Enter Replace mode       u Undo changes   \u0026lt;C-R\u0026gt; Redo changes    Exiting insert mode    Shortcut Description     Esc / \u0026lt;C-[\u0026gt; Exit insert mode   \u0026lt;C-C\u0026gt; Exit insert mode, and abort current command    Exiting insert mode    Shortcut Description     Esc / \u0026lt;C-[\u0026gt; Exit insert mode   \u0026lt;C-C\u0026gt; Exit insert mode, and abort current command    Clipboard    Shortcut Description     x Delete character   \u0026mdash; \u0026mdash;   dd Delete line (Cut)   yy Yank line (Copy)   \u0026mdash; \u0026mdash;   p Paste   P Paste before    Visual mode    Shortcut Description     v Enter visual mode   V Enter visual line mode   \u0026lt;C-V\u0026gt; Enter visual block mode    In visual mode    Shortcut Description     d / x Delete selection   s Replace selection   y Yank selection (Copy)    See Operators for other things you can do.\nOperators Usage Operators let you operate in a range of text (defined by motion). These are preformed in normal mode.\n   Shortcut Description     d w   Operator Motion    Operators list    Shortcut Description     d Delete   y Yank (copy)   c Change (delete then insert)   \u0026mdash; \u0026mdash;   \u0026gt; Indent right   \u0026lt; Indent left   \u0026mdash; \u0026mdash;   g~ Swap case   gU Uppercase   gu Lowercase   \u0026mdash; \u0026mdash;   ! Filter through external program    See :help operator\nExamples Combine operators with motions to use them.\n   Shortcut Description     dd (repeat the letter) Delete current line   dw Delete to next word   db Delete to beginning of word   2dd Delete 2 lines   dip Delete a text object (inside paragraph)   (in visual mode) d Delete selection    See: :help motion.txt\nText objects Usage Text objects let you operate (with an operator) in or around text blocks (objects).\n   Operator Inside Object     v i p   Operator [i]nside or [a]round Text object    Text objects    Shortcut Description     p Paragraph   w Word   s Sentence   \u0026mdash; \u0026mdash;   [ ( { \u0026lt; A [], (), or {} block   ' \u0026quot; ` A quoted string   \u0026mdash; \u0026mdash;   b A block [(   B A block in [{   t A XML tag block    Examples    Shortcut Description     vip Select paragraph   vipipipip Select more   \u0026mdash; \u0026mdash;   yip Yank inner paragraph   yap Yank paragraph (including newline)   \u0026mdash; \u0026mdash;   dip Delete inner paragraph   cip Change inner paragraph    See Operators for other things you can do.\nDiff    Shortcut Description     gvimdiff file1 file2 [file3] See differencies between files, in HMI    Misc Folds    Shortcut Description     zo / zO Open   zc / zC Close   za / zA Toggle   \u0026mdash; \u0026mdash;   zv Open folds for this line   \u0026mdash; \u0026mdash;   zM Close all   zR Open all   \u0026mdash; \u0026mdash;   zm Fold more (foldlevel += 1)   zr Fold less (foldlevel -= 1)   \u0026mdash; \u0026mdash;   zx Update folds    Uppercase ones are recursive (eg, zO is open recursively).\nNavigation    Shortcut Description     [( [{ [\u0026lt; Nrevious ( or { or \u0026lt;   ]) Next   \u0026mdash; \u0026mdash;   [m Previous method start   [M Previous method end    Jumping    Shortcut Description     \u0026lt;C-O\u0026gt; Go back to previous location   \u0026lt;C-I\u0026gt; Go forward   \u0026mdash; \u0026mdash;   gf Go to file in cursor    Counters    Shortcut Description     \u0026lt;C-A\u0026gt; Increment number   \u0026lt;C-X\u0026gt; Decrement    Windows    Shortcut Description     z{height}\u0026lt;Cr\u0026gt; Resize pane to {height} lines tall    Tags    Shortcut Description     :tag Classname Jump to first definition of Classname   \u0026mdash; \u0026mdash;   \u0026lt;C-]\u0026gt; Jump to definition   g] See all definitions   \u0026lt;C-T\u0026gt; Go back to last tag   \u0026lt;C-O\u0026gt; \u0026lt;C-I\u0026gt; Back/forward   \u0026mdash; \u0026mdash;   :tselect Classname Find definitions of Classname   :tjump Classname Find definitions of Classname (auto-select 1st)    Case    Shortcut Description     ~ Toggle case (Case =\u0026gt; cASE)   gU Uppercase   gu Lowercase   \u0026mdash; \u0026mdash;   gUU Uppercase current line (also gUgU)   guu Lowercase current line (also gugu)    Do these in visual or normal mode.\nMarks    Shortcut Description     `^ Last position of cursor in insert mode   `. Last change   `` Last jump   \u0026mdash; \u0026mdash;   ma Mark this cursor position as a   `a Jump to the cursor position a   'a Jump to the beginning of the line with position a    Misc    Shortcut Description     . Repeat last command   ]p paste under the current indentation level    Command line    Shortcut Description     \u0026lt;C-R\u0026gt;\u0026lt;C-W\u0026gt; Insert current word into the command line   \u0026lt;C-R\u0026gt;\u0026quot; Paste from \u0026quot; register   \u0026lt;C-X\u0026gt;\u0026lt;C-F\u0026gt; Auto-completion of path in insert mode    Text alignment :center [width] :right [width] :left See :help formatting\nCalculator    Shortcut Description     \u0026lt;C-R\u0026gt;=128/2 Shows the result of the division: \u0026lsquo;64\u0026rsquo;    Do this in insert mode.\nExiting with an error :cq :cquit Works like :qa, but throws an error. Great for aborting Git commands.\nSpell checking    Shortcut Description     :set spell spelllang=en_us Turn on US English spell checking   ]s Move to next misspelled word after the cursor   [s Move to previous misspelled word before the cursor   z= Suggest spellings for the word under/after the cursor   zg Add word to spell list   zw Mark word as bad/mispelling   zu / C-X (Insert Mode) Suggest words for bad word under cursor from spellfile    See :help spell\nAlso see  Vim cheatsheet (vim.rotrr.com) Vim documentation (vimdoc.sourceforge.net) Interactive Vim tutorial (openvim.com)  ","permalink":"https://laokong4628.github.io/zh-cn/posts/Vim.html/","tags":["Featured"],"title":"Vim"},{"categories":["Markdown"],"contents":"这篇文章提供了可以在 Hugo 的文章中使用的基本 Markdown 语法示例.\n注意  这篇文章借鉴了一篇很棒的来自 Grav 的文章.\n如果你想了解 Loveit 主题的扩展 Markdown 语法, 请阅读扩展 Markdown 语法页面.\n   事实上, 编写 Web 内容很麻烦. [WYSIWYG]^(所见即所得) 编辑器帮助减轻了这一任务. 但通常会导致代码太糟, 或更糟糕的是, 网页也会很丑.\n没有通常伴随的所有复杂和丑陋的问题, Markdown 是一种更好的生成 HTML 内容的方式.\n一些主要好处是:\n Markdown 简单易学, 几乎没有多余的字符, 因此编写内容也更快. 用 Markdown 书写时出错的机会更少. 可以产生有效的 XHTML 输出. 将内容和视觉显示保持分开, 这样就不会打乱网站的外观. 可以在你喜欢的任何文本编辑器或 Markdown 应用程序中编写内容. Markdown 使用起来很有趣!  John Gruber, Markdown 的作者如是说:\n Markdown 格式的首要设计目标是更具可读性. 最初的想法是 Markdown 格式的文档应当以纯文本形式发布, 而不会看起来像被标签或格式说明所标记. 虽然 Markdown 的语法受到几种现有的文本到 HTML 转换工具的影响, 但 Markdown 语法的最大灵感来源是纯文本电子邮件的格式.\n\u0026ndash; John Gruber  话不多说, 我们来回顾一下 Markdown 的主要语法以及生成的 HTML 样式!\n技巧  :(far fa-bookmark fa-fw): 将此页保存为书签，以备将来参考!   1 标题 从 h2 到 h6 的标题在每个级别上都加上一个 ＃:\n## h2 标题 ### h3 标题 #### h4 标题 ##### h5 标题 ###### h6 标题 输出的 HTML 看起来像这样:\n\u0026lt;h2\u0026gt;h2 标题\u0026lt;/h2\u0026gt; \u0026lt;h3\u0026gt;h3 标题\u0026lt;/h3\u0026gt; \u0026lt;h4\u0026gt;h4 标题\u0026lt;/h4\u0026gt; \u0026lt;h5\u0026gt;h5 标题\u0026lt;/h5\u0026gt; \u0026lt;h6\u0026gt;h6 标题\u0026lt;/h6\u0026gt; 标题 ID  要添加自定义标题 ID, 请在与标题相同的行中将自定义 ID 放在花括号中:\n### 一个很棒的标题 {#custom-id} 输出的 HTML 看起来像这样:\n\u0026lt;h3 id=\u0026#34;custom-id\u0026#34;\u0026gt;一个很棒的标题\u0026lt;/h3\u0026gt;    2 注释 注释是和 HTML 兼容的：\n\u0026lt;!-- 这是一段注释 --\u0026gt; 不能看到以下的注释:\n3 水平线 HTML 中的 \u0026lt;hr\u0026gt; 标签是用来在段落元素之间创建一个 \u0026ldquo;专题间隔\u0026rdquo; 的. 使用 Markdown, 你可以用以下方式创建一个 \u0026lt;hr\u0026gt; 标签:\n ___: 三个连续的下划线 ---: 三个连续的破折号 ***: 三个连续的星号  呈现的输出效果如下:\n   4 段落 按照纯文本的方式书写段落, 纯文本在呈现的 HTML 中将用 \u0026lt;p\u0026gt;/\u0026lt;/p\u0026gt; 标签包裹.\n如下段落:\nLorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad. 输出的 HTML 看起来像这样:\n\u0026lt;p\u0026gt;Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.\u0026lt;/p\u0026gt; 可以使用一个空白行进行换行.\n5 内联 HTML 元素 如果你需要某个 HTML 标签 (带有一个类), 则可以简单地像这样使用:\nMarkdown 格式的段落. \u0026lt;div class=\u0026#34;class\u0026#34;\u0026gt; 这是 \u0026lt;b\u0026gt;HTML\u0026lt;/b\u0026gt; \u0026lt;/div\u0026gt; Markdown 格式的段落. 6 强调 加粗 用于强调带有较粗字体的文本片段.\n以下文本片段会被 渲染为粗体.\n**渲染为粗体** __渲染为粗体__ 输出的 HTML 看起来像这样:\n\u0026lt;strong\u0026gt;渲染为粗体\u0026lt;/strong\u0026gt; 斜体 用于强调带有斜体的文本片段.\n以下文本片段被 渲染为斜体.\n*渲染为斜体* _渲染为斜体_ 输出的 HTML 看起来像这样:\n\u0026lt;em\u0026gt;渲染为斜体\u0026lt;/em\u0026gt; 删除线 按照 [GFM]^(GitHub flavored Markdown) 你可以使用删除线.\n~~这段文本带有删除线.~~ 呈现的输出效果如下:\n这段文本带有删除线.\n输出的 HTML 看起来像这样:\n\u0026lt;del\u0026gt;这段文本带有删除线.\u0026lt;/del\u0026gt; 组合 加粗, 斜体, 和删除线可以 组合使用.\n***加粗和斜体*** ~~**删除线和加粗**~~ ~~*删除线和斜体*~~ ~~***加粗, 斜体和删除线***~~ 呈现的输出效果如下:\n加粗和斜体\n删除线和加粗\n删除线和斜体\n加粗, 斜体和删除线\n输出的 HTML 看起来像这样:\n\u0026lt;em\u0026gt;\u0026lt;strong\u0026gt;加粗和斜体\u0026lt;/strong\u0026gt;\u0026lt;/em\u0026gt; \u0026lt;del\u0026gt;\u0026lt;strong\u0026gt;删除线和加粗\u0026lt;/strong\u0026gt;\u0026lt;/del\u0026gt; \u0026lt;del\u0026gt;\u0026lt;em\u0026gt;删除线和斜体\u0026lt;/em\u0026gt;\u0026lt;/del\u0026gt; \u0026lt;del\u0026gt;\u0026lt;em\u0026gt;\u0026lt;strong\u0026gt;加粗, 斜体和删除线\u0026lt;/strong\u0026gt;\u0026lt;/em\u0026gt;\u0026lt;/del\u0026gt; 7 引用 用于在文档中引用其他来源的内容块.\n在要引用的任何文本之前添加 \u0026gt;:\n\u0026gt; **Fusion Drive** combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. 呈现的输出效果如下:\n Fusion Drive combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined.\n 输出的 HTML 看起来像这样:\n\u0026lt;blockquote\u0026gt; \u0026lt;p\u0026gt; \u0026lt;strong\u0026gt;Fusion Drive\u0026lt;/strong\u0026gt; combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. \u0026lt;/p\u0026gt; \u0026lt;/blockquote\u0026gt; 引用也可以嵌套:\n\u0026gt; Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. \u0026gt;\u0026gt; Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. 呈现的输出效果如下:\n Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi.\n Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam.\n  8 列表 无序列表 一系列项的列表, 其中项的顺序没有明显关系.\n你可以使用以下任何符号来表示无序列表中的项:\n* 一项内容 - 一项内容 + 一项内容 例如:\n* Lorem ipsum dolor sit amet * Consectetur adipiscing elit * Integer molestie lorem at massa * Facilisis in pretium nisl aliquet * Nulla volutpat aliquam velit * Phasellus iaculis neque * Purus sodales ultricies * Vestibulum laoreet porttitor sem * Ac tristique libero volutpat at * Faucibus porta lacus fringilla vel * Aenean sit amet erat nunc * Eget porttitor lorem 呈现的输出效果如下:\n Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit  Phasellus iaculis neque Purus sodales ultricies Vestibulum laoreet porttitor sem Ac tristique libero volutpat at   Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem  输出的 HTML 看起来像这样:\n\u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;Lorem ipsum dolor sit amet\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Consectetur adipiscing elit\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Integer molestie lorem at massa\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Facilisis in pretium nisl aliquet\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Nulla volutpat aliquam velit \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;Phasellus iaculis neque\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Purus sodales ultricies\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Vestibulum laoreet porttitor sem\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Ac tristique libero volutpat at\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Faucibus porta lacus fringilla vel\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Aenean sit amet erat nunc\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Eget porttitor lorem\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; 有序列表 一系列项的列表, 其中项的顺序确实很重要.\n1. Lorem ipsum dolor sit amet 2. Consectetur adipiscing elit 3. Integer molestie lorem at massa 4. Facilisis in pretium nisl aliquet 5. Nulla volutpat aliquam velit 6. Faucibus porta lacus fringilla vel 7. Aenean sit amet erat nunc 8. Eget porttitor lorem 呈现的输出效果如下:\n Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem  输出的 HTML 看起来像这样:\n\u0026lt;ol\u0026gt; \u0026lt;li\u0026gt;Lorem ipsum dolor sit amet\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Consectetur adipiscing elit\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Integer molestie lorem at massa\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Facilisis in pretium nisl aliquet\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Nulla volutpat aliquam velit\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Faucibus porta lacus fringilla vel\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Aenean sit amet erat nunc\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Eget porttitor lorem\u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; 技巧  如果你对每一项使用 1., Markdown 将自动为每一项编号. 例如:\n1. Lorem ipsum dolor sit amet 1. Consectetur adipiscing elit 1. Integer molestie lorem at massa 1. Facilisis in pretium nisl aliquet 1. Nulla volutpat aliquam velit 1. Faucibus porta lacus fringilla vel 1. Aenean sit amet erat nunc 1. Eget porttitor lorem 呈现的输出效果如下:\n Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem     任务列表 任务列表使你可以创建带有复选框的列表. 要创建任务列表, 请在任务列表项之前添加破折号 (-) 和带有空格的方括号 ([ ]). 要选择一个复选框，请在方括号之间添加 x ([x]).\n- [x] Write the press release - [ ] Update the website - [ ] Contact the media 呈现的输出效果如下:\n Write the press release Update the website Contact the media  9 代码 行内代码 用 `包装行内代码段.\n在这个例子中, `\u0026lt;section\u0026gt;\u0026lt;/section\u0026gt;` 会被包裹成 **代码**. 呈现的输出效果如下:\n在这个例子中, \u0026lt;section\u0026gt;\u0026lt;/section\u0026gt; 会被包裹成 代码.\n输出的 HTML 看起来像这样:\n\u0026lt;p\u0026gt; 在这个例子中, \u0026lt;code\u0026gt;\u0026amp;lt;section\u0026amp;gt;\u0026amp;lt;/section\u0026amp;gt;\u0026lt;/code\u0026gt; 会被包裹成 \u0026lt;strong\u0026gt;代码\u0026lt;/strong\u0026gt;. \u0026lt;/p\u0026gt; 缩进代码 将几行代码缩进至少四个空格，例如:\n// Some comments line 1 of code line 2 of code line 3 of code 呈现的输出效果如下:\n// Some comments line 1 of code line 2 of code line 3 of code  输出的 HTML 看起来像这样:\n\u0026lt;pre\u0026gt; \u0026lt;code\u0026gt; // Some comments line 1 of code line 2 of code line 3 of code \u0026lt;/code\u0026gt; \u0026lt;/pre\u0026gt; 围栏代码块 使用 \u0026ldquo;围栏\u0026rdquo; ```来生成一段带有语言属性的代码块.\n```markdown Sample text here... ``` 输出的 HTML 看起来像这样:\n\u0026lt;pre language-html\u0026gt; \u0026lt;code\u0026gt;Sample text here...\u0026lt;/code\u0026gt; \u0026lt;/pre\u0026gt; 语法高亮 [GFM]^(GitHub Flavored Markdown) 也支持语法高亮.\n要激活它，只需在第一个代码 \u0026ldquo;围栏\u0026rdquo; 之后直接添加你要使用的语言的文件扩展名, ```js, 语法高亮显示将自动应用于渲染的 HTML 中.\n例如, 在以下 JavaScript 代码中应用语法高亮:\n```js grunt.initConfig({ assemble: { options: { assets: \u0026#39;docs/assets\u0026#39;, data: \u0026#39;src/data/*.{json,yml}\u0026#39;, helpers: \u0026#39;src/custom-helpers.js\u0026#39;, partials: [\u0026#39;src/partials/**/*.{hbs,md}\u0026#39;] }, pages: { options: { layout: \u0026#39;default.hbs\u0026#39; }, files: { \u0026#39;./\u0026#39;: [\u0026#39;src/templates/pages/index.hbs\u0026#39;] } } } }; ``` 呈现的输出效果如下:\ngrunt.initConfig({ assemble: { options: { assets: \u0026#39;docs/assets\u0026#39;, data: \u0026#39;src/data/*.{json,yml}\u0026#39;, helpers: \u0026#39;src/custom-helpers.js\u0026#39;, partials: [\u0026#39;src/partials/**/*.{hbs,md}\u0026#39;] }, pages: { options: { layout: \u0026#39;default.hbs\u0026#39; }, files: { \u0026#39;./\u0026#39;: [\u0026#39;src/templates/pages/index.hbs\u0026#39;] } } } }; 注意  Hugo 文档中的 语法高亮页面 介绍了有关语法高亮的更多信息, 包括语法高亮的 shortcode.   10 表格 通过在每个单元格之间添加竖线作为分隔线, 并在标题下添加一行破折号 (也由竖线分隔) 来创建表格. 注意, 竖线不需要垂直对齐.\n| Option | Description | | ------ | ----------- | | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | 呈现的输出效果如下:\n   Option Description     data path to data files to supply the data that will be passed into templates.   engine engine to be used for processing templates. Handlebars is the default.   ext extension to be used for dest files.    输出的 HTML 看起来像这样:\n\u0026lt;table\u0026gt; \u0026lt;thead\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th\u0026gt;Option\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Description\u0026lt;/th\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/thead\u0026gt; \u0026lt;tbody\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;data\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;path to data files to supply the data that will be passed into templates.\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;engine\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;engine to be used for processing templates. Handlebars is the default.\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;ext\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;extension to be used for dest files.\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/tbody\u0026gt; \u0026lt;/table\u0026gt; 文本右对齐或居中对齐  在任何标题下方的破折号右侧添加冒号将使该列的文本右对齐.\n在任何标题下方的破折号两边添加冒号将使该列的对齐文本居中.\n| Option | Description | |:------:| -----------:| | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | 呈现的输出效果如下:\n   Option Description     data path to data files to supply the data that will be passed into templates.   engine engine to be used for processing templates. Handlebars is the default.   ext extension to be used for dest files.       11 链接 基本链接 \u0026lt;https://assemble.io\u0026gt; \u0026lt;contact@revolunet.com\u0026gt; [Assemble](https://assemble.io) 呈现的输出效果如下 (将鼠标悬停在链接上，没有提示):\nhttps://assemble.io\ncontact@revolunet.com\nAssemble\n输出的 HTML 看起来像这样:\n\u0026lt;a href=\u0026#34;https://assemble.io\u0026#34;\u0026gt;https://assemble.io\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;mailto:contact@revolunet.com\u0026#34;\u0026gt;contact@revolunet.com\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;https://assemble.io\u0026#34;\u0026gt;Assemble\u0026lt;/a\u0026gt; 添加一个标题 [Upstage](https://github.com/upstage/ \u0026#34;Visit Upstage!\u0026#34;) 呈现的输出效果如下 (将鼠标悬停在链接上，会有一行提示):\nUpstage\n输出的 HTML 看起来像这样:\n\u0026lt;a href=\u0026#34;https://github.com/upstage/\u0026#34; title=\u0026#34;Visit Upstage!\u0026#34;\u0026gt;Upstage\u0026lt;/a\u0026gt; 定位标记 定位标记使你可以跳至同一页面上的指定锚点. 例如, 每个章节:\n## Table of Contents  * [Chapter 1](#chapter-1) * [Chapter 2](#chapter-2) * [Chapter 3](#chapter-3) 将跳转到这些部分:\n## Chapter 1 \u0026lt;a id=\u0026#34;chapter-1\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; Content for chapter one. ## Chapter 2 \u0026lt;a id=\u0026#34;chapter-2\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; Content for chapter one. ## Chapter 3 \u0026lt;a id=\u0026#34;chapter-3\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; Content for chapter one. 注意  定位标记的位置几乎是任意的. 因为它们并不引人注目, 所以它们通常被放在同一行了.   12 脚注 脚注使你可以添加注释和参考, 而不会使文档正文混乱. 当你创建脚注时, 会在添加脚注引用的位置出现带有链接的上标编号. 读者可以单击链接以跳至页面底部的脚注内容.\n要创建脚注引用, 请在方括号中添加插入符号和标识符 ([^1]). 标识符可以是数字或单词, 但不能包含空格或制表符. 标识符仅将脚注引用与脚注本身相关联 - 在脚注输出中, 脚注按顺序编号.\n在中括号内使用插入符号和数字以及用冒号和文本来添加脚注内容 ([^1]：这是一段脚注). 你不一定要在文档末尾添加脚注. 可以将它们放在除列表, 引用和表格等元素之外的任何位置.\n这是一个数字脚注[^1]. 这是一个带标签的脚注[^label] [^1]: 这是一个数字脚注 [^label]: 这是一个带标签的脚注 这是一个数字脚注1.\n这是一个带标签的脚注2\n13 图片 图片的语法与链接相似, 但包含一个在前面的感叹号.\n![Minion](https://octodex.github.com/images/minion.png)  Minion\n\" Minion \n或者:\n![Alt text](https://octodex.github.com/images/stormtroopocat.jpg \u0026#34;The Stormtroopocat\u0026#34;)  Alt textThe Stormtroopocat\n\" The Stormtroopocat \n像链接一样, 图片也具有脚注样式的语法:\n![Alt text][id]  Alt textThe Dojocat\n\" The Dojocat \n稍后在文档中提供参考内容, 用来定义 URL 的位置:\n[id]: https://octodex.github.com/images/dojocat.jpg \u0026#34;The Dojocat\u0026#34; 技巧  LoveIt 主题提供了一个包含更多功能的 图片的 shortcode.   14 字体大小与颜色 图标\nRED APPLE (\u0026amp;#x1F34E;): 🍎 GREEN APPLE (\u0026amp;#x1F34F;): 🍏 BLUE HEART (\u0026amp;#x1F499;): 💙 GREEN HEART (\u0026amp;#x1F49A;): 💚 YELLOW HEART (\u0026amp;#x1F49B;): 💛 PURPLE HEART (\u0026amp;#x1F49C;): 💜 GREEN BOOK (\u0026amp;#x1F4D7;): 📗 BLUE BOOK (\u0026amp;#x1F4D8;): 📘 ORANGE BOOK (\u0026amp;#x1F4D9;): 📙 LARGE RED CIRCLE (\u0026amp;#x1F534;): 🔴 LARGE BLUE CIRCLE (\u0026amp;#x1F535;): 🔵 LARGE ORANGE DIAMOND (\u0026amp;#x1F536;): 🔶 LARGE BLUE DIAMOND (\u0026amp;#x1F537;): 🔷 SMALL ORANGE DIAMOND (\u0026amp;#x1F538;): 🔸 SMALL BLUE DIAMOND (\u0026amp;#x1F539;): 🔹 UP-POINTING RED TRIANGLE (\u0026amp;#x1F53A;): 🔺 DOWN-POINTING RED TRIANGLE (\u0026amp;#x1F53B;): 🔻 UP-POINTING SMALL RED TRIANGLE (\u0026amp;#x1F53C;): 🔼 DOWN-POINTING SMALL RED TRIANGLE (\u0026amp;#x1F53D;): 🔽 15 单行换行  根据其他Markdown语法介绍，换行直接敲回车是不行的，在有些编译器里是不会换行的。解决办法是换行后敲至少两个空格，或敲两个空格后再回车换行。这个方法或许在其他编译器里可行（笔者没有在其他编译器里实验），但是在简书里却实现不了多行换行，无论敲多少回车都是空一行。\n 16 文字间添加空格  添加\u0026amp;#160;或者\u0026amp;nbsp; **注意：**分号是英文状态下的！\n   这是一个数字脚注 \u0026#x21a9;\u0026#xfe0e;\n 这是一个带标签的脚注 \u0026#x21a9;\u0026#xfe0e;\n  ","permalink":"https://laokong4628.github.io/zh-cn/posts/Markdown-%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95.html/","tags":["Markdown","HTML"],"title":"Markdown 基本语法"},{"categories":["Markdown"],"contents":"Emoji 可以通过多种方式在 Hugo 项目中启用.\nemojify 方法可以直接在模板中调用, 或者使用行内 Shortcodes.\n要全局使用 emoji, 需要在你的网站配置中设置 enableEmoji 为 true, 然后你就可以直接在文章中输入 emoji 的代码.\n它们以冒号开头和结尾，并且包含 emoji 的 代码:\n去露营啦! {?:}tent: 很快就回来. 真开心! {?:}joy: 呈现的输出效果如下:\n去露营啦! ⛺ 很快就回来.\n真开心! 😂\n以下符号清单是 emoji 代码的非常有用的参考.\n表情与情感 笑脸表情    图标 代码 图标 代码     😀 grinning 😃 smiley   😄 smile 😁 grin   😆 laughing satisfied 😅 sweat_smile   🤣 rofl 😂 joy   🙂 slightly_smiling_face 🙃 upside_down_face   😉 wink 😊 blush   😇 innocent      爱意表情    图标 代码 图标 代码     😍 heart_eyes 😘 kissing_heart   😗 kissing ☺️ relaxed   😚 kissing_closed_eyes 😙 kissing_smiling_eyes    吐舌头表情    图标 代码 图标 代码     😋 yum 😛 stuck_out_tongue   😜 stuck_out_tongue_winking_eye 😝 stuck_out_tongue_closed_eyes   🤑 money_mouth_face      带手的表情    图标 代码 图标 代码     🤗 hugs 🤔 thinking    中性表情    图标 代码 图标 代码     🤐 zipper_mouth_face 😐 neutral_face   😑 expressionless 😶 no_mouth   😏 smirk 😒 unamused   🙄 roll_eyes 😬 grimacing   🤥 lying_face      困倦的表情    图标 代码 图标 代码     😌 relieved 😔 pensive   😪 sleepy 🤤 drooling_face   😴 sleeping      不适的表情    图标 代码 图标 代码     😷 mask 🤒 face_with_thermometer   🤕 face_with_head_bandage 🤢 nauseated_face   🤧 sneezing_face 😵 dizzy_face    戴帽子的表情    图标 代码 图标 代码     🤠 cowboy_hat_face      戴眼镜的表情    图标 代码 图标 代码     😎 sunglasses 🤓 nerd_face    担心的表情    图标 代码 图标 代码     😕 confused 😟 worried   🙁 slightly_frowning_face ☹ frowning_face   😮 open_mouth 😯 hushed   😲 astonished 😳 flushed   😦 frowning 😧 anguished   😨 fearful 😰 cold_sweat   😥 disappointed_relieved 😢 cry   😭 sob 😱 scream   😖 confounded 😣 persevere   😞 disappointed 😓 sweat   😩 weary 😫 tired_face    否定的表情    图标 代码 图标 代码     😤 triumph 😡 pout rage   😠 angry 😈 smiling_imp   👿 imp 💀 skull   ☠️ skull_and_crossbones      特殊打扮的表情    图标 代码 图标 代码     💩 hankey poop shit 🤡 clown_face   👹 japanese_ogre 👺 japanese_goblin   👻 ghost 👽 alien   👾 space_invader 🤖 robot    猫脸表情    图标 代码 图标 代码     😺 smiley_cat 😸 smile_cat   😹 joy_cat 😻 heart_eyes_cat   😼 smirk_cat 😽 kissing_cat   🙀 scream_cat 😿 crying_cat_face   😾 pouting_cat      猴脸表情    图标 代码 图标 代码     🙈 see_no_evil 🙉 hear_no_evil   🙊 speak_no_evil      情感    图标 代码 图标 代码     💋 kiss 💌 love_letter   💘 cupid 💝 gift_heart   💖 sparkling_heart 💗 heartpulse   💓 heartbeat 💞 revolving_hearts   💕 two_hearts 💟 heart_decoration   ❣️ heavy_heart_exclamation 💔 broken_heart   ❤️ heart 💛 yellow_heart   💚 green_heart 💙 blue_heart   💜 purple_heart 🖤 black_heart   💯 100 💢 anger   💥 boom collision 💫 dizzy   💦 sweat_drops 💨 dash   🕳️ hole 💣 bomb   💬 speech_balloon 👁️‍🗨️ eye_speech_bubble   🗯️ right_anger_bubble 💭 thought_balloon   💤 zzz      人与身体 张开手掌的手势    图标 代码 图标 代码     👋 wave 🤚 raised_back_of_hand   🖐️ raised_hand_with_fingers_splayed ✋ hand raised_hand   🖖 vulcan_salute      部分手指的手势    图标 代码 图标 代码     👌 ok_hand ✌️ v   🤞 crossed_fingers 🤘 metal   🤙 call_me_hand      一根手指的手势    图标 代码 图标 代码     👈 point_left 👉 point_right   👆 point_up_2 🖕 fu middle_finger   👇 point_down ☝️ point_up    握紧的手势    图标 代码 图标 代码     👍 +1 thumbsup 👎 -1 thumbsdown   ✊ fist fist_raised 👊 facepunch fist_oncoming punch   🤛 fist_left 🤜 fist_right    两只手    图标 代码 图标 代码     👏 clap 🙌 raised_hands   👐 open_hands 🤝 handshake   🙏 pray      握住东西的手势    图标 代码 图标 代码     ✍️ writing_hand 💅 nail_care   🤳 selfie      身体部位    图标 代码 图标 代码     💪 muscle 👂 ear   👃 nose 👀 eyes   👁️ eye 👅 tongue   👄 lips      人    图标 代码 图标 代码     👶 baby 👦 boy   👧 girl :blonde_man: blonde_man person_with_blond_hair   👨 man 👩 woman   👱‍♀️ blonde_woman 👴 older_man   👵 older_woman      身体动作    图标 代码 图标 代码     🙍‍♀️ frowning_woman person_frowning 🙍‍♂️ frowning_man   🙎‍♀️ person_with_pouting_face pouting_woman 🙎‍♂️ pouting_man   🙅‍♀️ ng_woman no_good no_good_woman 🙅‍♂️ ng_man no_good_man   🙆‍♀️ ok_woman 🙆‍♂️ ok_man   💁‍♀️ information_desk_person sassy_woman tipping_hand_woman 💁‍♂️ sassy_man tipping_hand_man   🙋‍♀️ raising_hand raising_hand_woman 🙋‍♂️ raising_hand_man   🙇‍♂️ bow bowing_man 🙇‍♀️ bowing_woman   🤦‍♂️ man_facepalming 🤦‍♀️ woman_facepalming   🤷‍♂️ man_shrugging 🤷‍♀️ woman_shrugging    人物角色    图标 代码 图标 代码     👨‍⚕️ man_health_worker 👩‍⚕️ woman_health_worker   👨‍🎓 man_student 👩‍🎓 woman_student   👨‍🏫 man_teacher 👩‍🏫 woman_teacher   👨‍⚖️ man_judge 👩‍⚖️ woman_judge   👨‍🌾 man_farmer 👩‍🌾 woman_farmer   👨‍🍳 man_cook 👩‍🍳 woman_cook   👨‍🔧 man_mechanic 👩‍🔧 woman_mechanic   👨‍🏭 man_factory_worker 👩‍🏭 woman_factory_worker   👨‍💼 man_office_worker 👩‍💼 woman_office_worker   👨‍🔬 man_scientist 👩‍🔬 woman_scientist   👨‍💻 man_technologist 👩‍💻 woman_technologist   👨‍🎤 man_singer 👩‍🎤 woman_singer   👨‍🎨 man_artist 👩‍🎨 woman_artist   👨‍✈️ man_pilot 👩‍✈️ woman_pilot   👨‍🚀 man_astronaut 👩‍🚀 woman_astronaut   👨‍🚒 man_firefighter 👩‍🚒 woman_firefighter   👮‍♂️ cop policeman 👮‍♀️ policewoman   🕵 detective male_detective 🕵️‍♀️ female_detective   💂‍♂️ guardsman 💂‍♀️ guardswoman   👷‍♂️ construction_worker construction_worker_man 👷‍♀️ construction_worker_woman   🤴 prince 👸 princess   👳‍♂️ man_with_turban 👳‍♀️ woman_with_turban   👲 man_with_gua_pi_mao 🤵‍♂️ man_in_tuxedo   👰 bride_with_veil 🤰 pregnant_woman    幻想的人物    图标 代码 图标 代码     👼 angel 🎅 santa   🤶 mrs_claus      人物活动    图标 代码 图标 代码     💆‍♀️ massage massage_woman 💆‍♂️ massage_man   💇‍♀️ haircut haircut_woman 💇‍♂️ haircut_man   🚶‍♂️ walking walking_man 🚶‍♀️ walking_woman   🏃‍♂️ runner running running_man 🏃‍♀️ running_woman   💃 dancer 🕺 man_dancing   🕴️ business_suit_levitating 👯‍♀️ dancers dancing_women   👯‍♂️ dancing_men      体育    图标 代码 图标 代码     🤺 person_fencing 🏇 horse_racing   ⛷️ skier 🏂 snowboarder   🏌️‍♂️ golfing_man 🏌️‍♀️ golfing_woman   🏄‍♂️ surfer surfing_man 🏄‍♀️ surfing_woman   🚣‍♂️ rowboat rowing_man 🚣‍♀️ rowing_woman   🏊‍♂️ swimmer swimming_man 🏊‍♀️ swimming_woman   ⛹️‍♂️ basketball_man ⛹️‍♀️ basketball_woman   🏋️‍♂️ weight_lifting_man 🏋️‍♀️ weight_lifting_woman   🚴‍♂️ bicyclist biking_man 🚴‍♀️ biking_woman   🚵‍♂️ mountain_bicyclist mountain_biking_man 🚵‍♀️ mountain_biking_woman   🤸‍♂️ man_cartwheeling 🤸‍♀️ woman_cartwheeling   🤼‍♂️ men_wrestling 🤼‍♀️ women_wrestling   🤽‍♂️ man_playing_water_polo 🤽‍♀️ woman_playing_water_polo   🤾‍♂️ man_playing_handball 🤾‍♀️ woman_playing_handball   🤹‍♂️ man_juggling 🤹‍♀️ woman_juggling    休息    图标 代码 图标 代码     🛀 bath 🛌 sleeping_bed    家庭    图标 代码 图标 代码     👭 two_women_holding_hands 👫 couple   👬 two_men_holding_hands 👩‍❤️‍💋‍👨 couplekiss_man_woman   👨‍❤️‍💋‍👨 couplekiss_man_man 👩‍❤️‍💋‍👩 couplekiss_woman_woman   👩‍❤️‍👨 couple_with_heart couple_with_heart_woman_man 👨‍❤️‍👨 couple_with_heart_man_man   👩‍❤️‍👩 couple_with_heart_woman_woman 👨‍👩‍👦 family family_man_woman_boy   👨‍👩‍👧 family_man_woman_girl 👨‍👩‍👧‍👦 family_man_woman_girl_boy   👨‍👩‍👦‍👦 family_man_woman_boy_boy 👨‍👩‍👧‍👧 family_man_woman_girl_girl   👨‍👨‍👦 family_man_man_boy 👨‍👨‍👧 family_man_man_girl   👨‍👨‍👧‍👦 family_man_man_girl_boy 👨‍👨‍👦‍👦 family_man_man_boy_boy   👨‍👨‍👧‍👧 family_man_man_girl_girl 👩‍👩‍👦 family_woman_woman_boy   👩‍👩‍👧 family_woman_woman_girl 👩‍👩‍👧‍👦 family_woman_woman_girl_boy   👩‍👩‍👦‍👦 family_woman_woman_boy_boy 👩‍👩‍👧‍👧 family_woman_woman_girl_girl   👨‍👦 family_man_boy 👨‍👦‍👦 family_man_boy_boy   👨‍👧 family_man_girl 👨‍👧‍👦 family_man_girl_boy   👨‍👧‍👧 family_man_girl_girl 👩‍👦 family_woman_boy   👩‍👦‍👦 family_woman_boy_boy 👩‍👧 family_woman_girl   👩‍👧‍👦 family_woman_girl_boy 👩‍👧‍👧 family_woman_girl_girl    人物符号    图标 代码 图标 代码     🗣 speaking_head 👤 bust_in_silhouette   👥 busts_in_silhouette 👣 footprints    动物与自然 哺乳动物    图标 代码 图标 代码     🐵 monkey_face 🐒 monkey   🦍 gorilla 🐶 dog   🐕 dog2 🐩 poodle   🐺 wolf 🦊 fox_face   🐱 cat 🐈 cat2   🦁 lion 🐯 tiger   🐅 tiger2 🐆 leopard   🐴 horse 🐎 racehorse   🦄 unicorn 🦌 deer   🐮 cow 🐂 ox   🐃 water_buffalo 🐄 cow2   🐷 pig 🐖 pig2   🐗 boar 🐽 pig_nose   🐏 ram 🐑 sheep   🐐 goat 🐪 dromedary_camel   🐫 camel 🐘 elephant   🦏 rhinoceros 🐭 mouse   🐁 mouse2 🐀 rat   🐹 hamster 🐰 rabbit   🐇 rabbit2 🐿️ chipmunk   🦇 bat 🐻 bear   🐨 koala 🐼 panda_face   🐾 feet paw_prints      鸟类    图标 代码 图标 代码     🦃 turkey 🐔 chicken   🐓 rooster 🐣 hatching_chick   🐤 baby_chick 🐥 hatched_chick   🐦 bird 🐧 penguin   🕊 dove 🦅 eagle   🦆 duck 🦉 owl    两栖动物    icon code icon code     🐸 frog      爬虫类    图标 代码 图标 代码     🐊 crocodile 🐢 turtle   🦎 lizard 🐍 snake   🐲 dragon_face 🐉 dragon    海洋动物    图标 代码 图标 代码     🐳 whale 🐋 whale2   🐬 dolphin flipper 🐟 fish   🐠 tropical_fish 🐡 blowfish   🦈 shark 🐙 octopus   🐚 shell      虫类    图标 代码 图标 代码     🐌 snail 🦋 butterfly   🐛 bug 🐜 ant   🐝 bee honeybee 🪲 beetle   🕷️ spider 🕸️ spider_web   🦂 scorpion      花类植物    图标 代码 图标 代码     💐 bouquet 🌸 cherry_blossom   💮 white_flower 🏵️ rosette   🌹 rose 🥀 wilted_flower   🌺 hibiscus 🌻 sunflower   🌼 blossom 🌷 tulip    其它植物    图标 代码 图标 代码     🌱 seedling 🌲 evergreen_tree   🌳 deciduous_tree 🌴 palm_tree   🌵 cactus 🌾 ear_of_rice   🌿 herb ☘️ shamrock   🍀 four_leaf_clover 🍁 maple_leaf   🍂 fallen_leaf 🍃 leaves    食物与饮料 水果    图标 代码 图标 代码     🍇 grapes 🍈 melon   🍉 watermelon 🍊 mandarin orange tangerine   🍋 lemon 🍌 banana   🍍 pineapple 🍎 apple   🍏 green_apple 🍐 pear   🍑 peach 🍒 cherries   🍓 strawberry 🥝 kiwi_fruit   🍅 tomato      蔬菜    图标 代码 图标 代码     🥑 avocado 🍆 eggplant   🥔 potato 🥕 carrot   🌽 corn 🌶️ hot_pepper   🥒 cucumber 🍄 mushroom   🥜 peanuts 🌰 chestnut    快餐    图标 代码 图标 代码     🍞 bread 🥐 croissant   🥖 baguette_bread 🥞 pancakes   🧀 cheese 🍖 meat_on_bone   🍗 poultry_leg 🥓 bacon   🍔 hamburger 🍟 fries   🍕 pizza 🌭 hotdog   🌮 taco 🌯 burrito   🥙 stuffed_flatbread 🥚 egg   🍳 fried_egg 🥘 shallow_pan_of_food   🍲 stew 🥗 green_salad   🍿 popcorn      亚洲食物    图标 代码 图标 代码     🍱 bento 🍘 rice_cracker   🍙 rice_ball 🍚 rice   🍛 curry 🍜 ramen   🍝 spaghetti 🍠 sweet_potato   🍢 oden 🍣 sushi   🍤 fried_shrimp 🍥 fish_cake   🍡 dango      海鲜    图标 代码 图标 代码     🦀 crab 🦐 shrimp   🦑 squid      甜点    图标 代码 图标 代码     🍦 icecream 🍧 shaved_ice   🍨 ice_cream 🍩 doughnut   🍪 cookie 🎂 birthday   🍰 cake 🍫 chocolate_bar   🍬 candy 🍭 lollipop   🍮 custard 🍯 honey_pot    饮料    图标 代码 图标 代码     🍼 baby_bottle 🥛 milk_glass   ☕ coffee 🍵 tea   🍶 sake 🍾 champagne   🍷 wine_glass 🍸 cocktail   🍹 tropical_drink 🍺 beer   🍻 beers 🥂 clinking_glasses   🥃 tumbler_glass      餐具    图标 代码 图标 代码     🍽️ plate_with_cutlery 🍴 fork_and_knife   🥄 spoon 🔪 hocho knife   🏺 amphora      旅游与地理 地图    图标 代码 图标 代码     🌍 earth_africa 🌎 earth_americas   🌏 earth_asia 🌐 globe_with_meridians   🗺️ world_map 🗾 japan    地理现象    图标 代码 图标 代码     🏔 mountain_snow ⛰️ mountain   🌋 volcano 🗻 mount_fuji   🏕️ camping ⛱ beach_umbrella   🏜️ desert 🏝️ desert_island   🏞️ national_park      建筑物    图标 代码 图标 代码     🏟️ stadium 🏛️ classical_building   🏗️ building_construction 🏘 houses   🏚 derelict_house 🏠 house   🏡 house_with_garden 🏢 office   🏣 post_office 🏤 european_post_office   🏥 hospital 🏦 bank   🏨 hotel 🏩 love_hotel   🏪 convenience_store 🏫 school   🏬 department_store 🏭 factory   🏯 japanese_castle 🏰 european_castle   💒 wedding 🗼 tokyo_tower   🗽 statue_of_liberty      宗教建筑    图标 代码 图标 代码     ⛪ church 🕌 mosque   🕍 synagogue ⛩️ shinto_shrine   🕋 kaaba      其它地点    图标 代码 图标 代码     ⛲ fountain ⛺ tent   🌁 foggy 🌃 night_with_stars   🏙️ cityscape 🌄 sunrise_over_mountains   🌅 sunrise 🌆 city_sunset   🌇 city_sunrise 🌉 bridge_at_night   ♨️ hotsprings 🎠 carousel_horse   🎡 ferris_wheel 🎢 roller_coaster   💈 barber 🎪 circus_tent    陆路运输    图标 代码 图标 代码     🚂 steam_locomotive 🚃 railway_car   🚄 bullettrain_side 🚅 bullettrain_front   🚆 train2 🚇 metro   🚈 light_rail 🚉 station   🚊 tram 🚝 monorail   🚞 mountain_railway 🚋 train   🚌 bus 🚍 oncoming_bus   🚎 trolleybus 🚐 minibus   🚑 ambulance 🚒 fire_engine   🚓 police_car 🚔 oncoming_police_car   🚕 taxi 🚖 oncoming_taxi   🚗 car red_car 🚘 oncoming_automobile   🚙 blue_car 🚚 truck   🚛 articulated_lorry 🚜 tractor   🏎️ racing_car 🏍 motorcycle   🛵 motor_scooter 🚲 bike   🛴 kick_scooter 🚏 busstop   🛣️ motorway 🛤️ railway_track   🛢️ oil_drum ⛽ fuelpump   🚨 rotating_light 🚥 traffic_light   🚦 vertical_traffic_light 🛑 stop_sign   🚧 construction      水路运输    图标 代码 图标 代码     ⚓ anchor ⛵ boat sailboat   🛶 canoe 🚤 speedboat   🛳️ passenger_ship ⛴️ ferry   🛥️ motor_boat 🚢 ship    空中运输    图标 代码 图标 代码     ✈️ airplane 🛩️ small_airplane   🛫 flight_departure 🛬 flight_arrival   💺 seat 🚁 helicopter   🚟 suspension_railway 🚠 mountain_cableway   🚡 aerial_tramway 🛰️ artificial_satellite   🚀 rocket      旅馆    icon code icon code     🛎️ bellhop_bell      时间    图标 代码 图标 代码     ⌛ hourglass ⏳ hourglass_flowing_sand   ⌚ watch ⏰ alarm_clock   ⏱️ stopwatch ⏲️ timer_clock   🕰️ mantelpiece_clock 🕛 clock12   🕧 clock1230 🕐 clock1   🕜 clock130 🕑 clock2   🕝 clock230 🕒 clock3   🕞 clock330 🕓 clock4   🕟 clock430 🕔 clock5   🕠 clock530 🕕 clock6   🕡 clock630 🕖 clock7   🕢 clock730 🕗 clock8   🕣 clock830 🕘 clock9   🕤 clock930 🕙 clock10   🕥 clock1030 🕚 clock11   🕦 clock1130      天空与天气    图标 代码 图标 代码     🌑 new_moon 🌒 waxing_crescent_moon   🌓 first_quarter_moon 🌔 moon waxing_gibbous_moon   🌕 full_moon 🌖 waning_gibbous_moon   🌗 last_quarter_moon 🌘 waning_crescent_moon   🌙 crescent_moon 🌚 new_moon_with_face   🌛 first_quarter_moon_with_face 🌜 last_quarter_moon_with_face   🌡️ thermometer ☀️ sunny   🌝 full_moon_with_face 🌞 sun_with_face   ⭐ star 🌟 star2   🌠 stars 🌌 milky_way   ☁️ cloud ⛅ partly_sunny   ⛈ cloud_with_lightning_and_rain 🌤 sun_behind_small_cloud   🌥 sun_behind_large_cloud 🌦 sun_behind_rain_cloud   🌧 cloud_with_rain 🌨 cloud_with_snow   🌩 cloud_with_lightning 🌪️ tornado   🌫️ fog 🌬 wind_face   🌀 cyclone 🌈 rainbow   🌂 closed_umbrella ☂️ open_umbrella   ☂️ umbrella ⛱️ parasol_on_ground   ⚡ zap ❄️ snowflake   ☃️ snowman_with_snow ☃️ snowman   ☄️ comet 🔥 fire   💧 droplet 🌊 ocean    活动 事件    图标 代码 图标 代码     🎃 jack_o_lantern 🎄 christmas_tree   🎆 fireworks 🎇 sparkler   ✨ sparkles 🎈 balloon   🎉 tada 🎊 confetti_ball   🎋 tanabata_tree 🎍 bamboo   🎎 dolls 🎏 flags   🎐 wind_chime 🎑 rice_scene   🎀 ribbon 🎁 gift   🎗️ reminder_ribbon 🎟 tickets   🎫 ticket      奖杯与奖牌    图标 代码 图标 代码     🎖️ medal_military 🏆 trophy   🏅 medal_sports 🥇 1st_place_medal   🥈 2nd_place_medal 🥉 3rd_place_medal    体育运动    图标 代码 图标 代码     ⚽ soccer ⚾ baseball   🏀 basketball 🏐 volleyball   🏈 football 🏉 rugby_football   🎾 tennis 🎳 bowling   🦗 cricket 🏑 field_hockey   🏒 ice_hockey 🏓 ping_pong   🏸 badminton 🥊 boxing_glove   🥋 martial_arts_uniform 🥅 goal_net   ⛳ golf ⛸️ ice_skate   🎣 fishing_pole_and_fish 🎽 running_shirt_with_sash   🎿 ski      游戏    图标 代码 图标 代码     🎯 dart 🎱 8ball   🔮 crystal_ball 🎮 video_game   🕹️ joystick 🎰 slot_machine   🎲 game_die ♠️ spades   ♥️ hearts ♦️ diamonds   ♣️ clubs 🃏 black_joker   🀄 mahjong 🎴 flower_playing_cards    艺术与工艺    图标 代码 图标 代码     🎭 performing_arts 🖼 framed_picture   🎨 art      物品 服装    图标 代码 图标 代码     👓 eyeglasses 🕶️ dark_sunglasses   👔 necktie 👕 shirt tshirt   👖 jeans 👗 dress   👘 kimono 👙 bikini   👚 womans_clothes 👛 purse   👜 handbag 👝 pouch   🛍️ shopping 🎒 school_satchel   👞 mans_shoe shoe 👟 athletic_shoe   👠 high_heel 👡 sandal   👢 boot 👑 crown   👒 womans_hat 🎩 tophat   🎓 mortar_board ⛑️ rescue_worker_helmet   📿 prayer_beads 💄 lipstick   💍 ring 💎 gem    声音    图标 代码 图标 代码     🔇 mute 🔈 speaker   🔉 sound 🔊 loud_sound   📢 loudspeaker 📣 mega   📯 postal_horn 🔔 bell   🔕 no_bell      音乐    图标 代码 图标 代码     🎼 musical_score 🎵 musical_note   🎶 notes 🎙️ studio_microphone   🎚️ level_slider 🎛️ control_knobs   🎤 microphone 🎧 headphones   📻 radio      乐器    图标 代码 图标 代码     🎷 saxophone 🎸 guitar   🎹 musical_keyboard 🎺 trumpet   🎻 violin 🥁 drum    电话    图标 代码 图标 代码     📱 iphone 📲 calling   ☎️ phone telephone 📞 telephone_receiver   📟 pager 📠 fax    电脑    图标 代码 图标 代码     🔋 battery 🔌 electric_plug   💻 computer 🖥️ desktop_computer   🖨️ printer ⌨️ keyboard   🖱 computer_mouse 🖲️ trackball   💽 minidisc 💾 floppy_disk   💿 cd 📀 dvd    灯光与影像    图标 代码 图标 代码     🎥 movie_camera 🎞️ film_strip   📽️ film_projector 🎬 clapper   📺 tv 📷 camera   📸 camera_flash 📹 video_camera   📼 vhs 🔍 mag   🔎 mag_right 🕯️ candle   💡 bulb 🔦 flashlight   🏮 izakaya_lantern lantern      书与纸张    图标 代码 图标 代码     📔 notebook_with_decorative_cover 📕 closed_book   📖 book open_book 📗 green_book   📘 blue_book 📙 orange_book   📚 books 📓 notebook   📒 ledger 📃 page_with_curl   📜 scroll 📄 page_facing_up   📰 newspaper 🗞️ newspaper_roll   📑 bookmark_tabs 🔖 bookmark   🏷️ label      钱    图标 代码 图标 代码     💰 moneybag 💴 yen   💵 dollar 💶 euro   💷 pound 💸 money_with_wings   💳 credit_card 💹 chart    邮件    图标 代码 图标 代码     ✉️ email envelope 📧 📧   📨 incoming_envelope 📩 envelope_with_arrow   📤 outbox_tray 📥 inbox_tray   📦 package 📫 mailbox   📪 mailbox_closed 📬 mailbox_with_mail   📭 mailbox_with_no_mail 📮 postbox   🗳 ballot_box      书写    图标 代码 图标 代码     ✏️ pencil2 ✒️ black_nib   🖋 fountain_pen 🖊 pen   🖌 paintbrush 🖍 crayon   📝 memo pencil      办公    图标 代码 图标 代码     💼 briefcase 📁 file_folder   📂 open_file_folder 🗂️ card_index_dividers   📅 date 📆 calendar   🗒 spiral_notepad 🗓 spiral_calendar   📇 card_index 📈 chart_with_upwards_trend   📉 chart_with_downwards_trend 📊 bar_chart   📋 clipboard 📌 pushpin   📍 round_pushpin 📎 paperclip   🖇 paperclips 📏 straight_ruler   📐 triangular_ruler ✂️ scissors   🗃️ card_file_box 🗄️ file_cabinet   🗑️ wastebasket      锁    图标 代码 图标 代码     🔒 lock 🔓 unlock   🔏 lock_with_ink_pen 🔐 closed_lock_with_key   🔑 key 🗝️ old_key    工具    图标 代码 图标 代码     🔨 hammer ⛏️ pick   ⚒️ hammer_and_pick 🛠️ hammer_and_wrench   🗡 dagger ⚔️ crossed_swords   🔫 gun 🏹 bow_and_arrow   🛡️ shield 🔧 wrench   🔩 nut_and_bolt ⚙️ gear   🗜 clamp ⚖ balance_scale   🔗 link ⛓️ chains    科学    图标 代码 图标 代码     ⚗️ alembic 🔬 microscope   🔭 telescope 🛰️ satellite    医疗    图标 代码 图标 代码     💉 syringe 💊 pill    生活用品    图标 代码 图标 代码     🚪 door 🛏️ bed   🛋️ couch_and_lamp 🚽 toilet   🚿 shower 🛁 bathtub   🛒 shopping_cart      其它物品    图标 代码 图标 代码     🚬 smoking ⚰️ coffin   ⚱️ funeral_urn 🗿 moyai    符号 交通标识    图标 代码 图标 代码     🏧 atm 🚮 put_litter_in_its_place   🚰 potable_water ♿ wheelchair   🚹 mens 🚺 womens   🚻 restroom 🚼 baby_symbol   🚾 wc 🛂 passport_control   🛃 customs 🛄 baggage_claim   🛅 left_luggage      警告    图标 代码 图标 代码     ⚠️ warning 🚸 children_crossing   ⛔ no_entry 🚫 no_entry_sign   🚳 no_bicycles 🚭 no_smoking   🚯 do_not_litter 🚱 🚱   🚷 no_pedestrians 📵 no_mobile_phones   🔞 underage ☢ radioactive   ☣ biohazard      箭头    图标 代码 图标 代码     ⬆️ arrow_up ↗️ arrow_upper_right   ➡️ arrow_right ↘️ arrow_lower_right   ⬇️ arrow_down ↙️ arrow_lower_left   ⬅️ arrow_left ↖️ arrow_upper_left   ↕️ arrow_up_down ↔️ left_right_arrow   ↩️ leftwards_arrow_with_hook ↪️ arrow_right_hook   ⤴️ arrow_heading_up ⤵️ arrow_heading_down   🔃 arrows_clockwise 🔄 arrows_counterclockwise   🔙 back 🔚 end   🔛 on 🔜 soon   🔝 top      宗教    图标 代码 图标 代码     🛐 place_of_worship ⚛️ atom_symbol   🕉 om ✡️ star_of_david   ☸️ wheel_of_dharma ☯️ yin_yang   ✝️ latin_cross ☦️ orthodox_cross   ☪️ star_and_crescent ☮️ peace_symbol   🕎 menorah 🔯 six_pointed_star    生肖    图标 代码 图标 代码     ♈ aries ♉ taurus   ♊ gemini ♋ cancer   ♌ leo ♍ virgo   ♎ libra ♏ scorpius   ♐ sagittarius ♑ capricorn   ♒ aquarius ♓ pisces   ⛎ ophiuchus      影像符号    图标 代码 图标 代码     🔀 twisted_rightwards_arrows 🔁 repeat   🔂 repeat_one ▶️ arrow_forward   ⏩ fast_forward ⏭ next_track_button   ⏯ play_or_pause_button ◀️ arrow_backward   ⏪ rewind ⏮️ previous_track_button   🔼 arrow_up_small ⏫ arrow_double_up   🔽 arrow_down_small ⏬ arrow_double_down   ⏸ pause_button ⏹ stop_button   ⏺ record_button 🎦 cinema   🔅 low_brightness 🔆 high_brightness   📶 signal_strength 📳 vibration_mode   📴 mobile_phone_off      数学    图标 代码 图标 代码     ✖️ heavy_multiplication_x ➕ heavy_plus_sign   ➖ heavy_minus_sign ➗ heavy_division_sign    标点符号    图标 代码 图标 代码     ‼️ bangbang ⁉️ interrobang   ❓ question ❔ grey_question   ❕ grey_exclamation ❗ exclamation heavy_exclamation_mark   〰️ wavy_dash      货币    图标 代码 图标 代码     💱 currency_exchange 💲 heavy_dollar_sign    按键符号    图标 代码 图标 代码     #️⃣ hash *️⃣ asterisk   0️⃣ zero 1️⃣ one   2️⃣ two 3️⃣ three   4️⃣ four 5️⃣ five   6️⃣ six 7️⃣ seven   8️⃣ eight 9️⃣ nine   🔟 keycap_ten      字母符号    图标 代码 图标 代码     🔠 capital_abcd 🔡 abcd   🔢 1234 🔣 symbols   🔤 abc 🅰️ a   🆎 ab 🅱️ b   🆑 cl 🆒 cool   🆓 free ℹ️ information_source   🆔 id ⓜ️ m   🆕 new 🆖 ng   🅾️ o2 🆗 ok   🅿️ parking 🆘 sos   🆙 up 🆚 vs   🈁 koko 🈂️ sa   🈷️ u6708 🈶 u6709   🈯 u6307 🉐 ideograph_advantage   🈹 u5272 🈚 u7121   🈲 u7981 🉑 accept   🈸 u7533 🈴 u5408   🈳 u7a7a ㊗️ congratulations   ㊙️ secret 🈺 u55b6   🈵 u6e80      几何符号    图标 代码 图标 代码     🔴 red_circle 🔵 large_blue_circle   ⚫ black_circle ⚪ white_circle   ⬛ black_large_square ⬜ white_large_square   ◼️ black_medium_square ◻️ white_medium_square   ◾ black_medium_small_square ◽ white_medium_small_square   ▪️ black_small_square ▫️ white_small_square   🔶 large_orange_diamond 🔷 large_blue_diamond   🔸 small_orange_diamond 🔹 small_blue_diamond   🔺 small_red_triangle 🔻 small_red_triangle_down   💠 diamond_shape_with_a_dot_inside 🔘 radio_button   🔳 white_square_button 🔲 black_square_button    其它符合    图标 代码 图标 代码     ♻️ recycle ⚜️ fleur_de_lis   🔱 trident 📛 name_badge   🔰 beginner ⭕ o   ✅ white_check_mark ☑️ ballot_box_with_check   ✔️ heavy_check_mark ❌ x   ❎ negative_squared_cross_mark ➰ curly_loop   ➿ loop 〽️ part_alternation_mark   ✳️ eight_spoked_asterisk ✴️ eight_pointed_black_star   ❇️ sparkle ©️ copyright   ®️ registered ™️ tm    旗帜 常用旗帜    图标 代码 图标 代码     🏁 checkered_flag 🚩 triangular_flag_on_post   🎌 crossed_flags 🏴 black_flag   🏳 white_flag 🏳️‍🌈 rainbow_flag    国家和地区旗帜    图标 代码 图标 代码     🇦🇩 andorra 🇦🇪 united_arab_emirates   🇦🇫 afghanistan 🇦🇬 antigua_barbuda   🇦🇮 anguilla 🇦🇱 albania   🇦🇲 armenia 🇦🇴 angola   🇦🇶 antarctica 🇦🇷 argentina   🇦🇸 american_samoa 🇦🇹 austria   🇦🇺 australia 🇦🇼 aruba   🇦🇽 aland_islands 🇦🇿 azerbaijan   🇧🇦 bosnia_herzegovina 🇧🇧 barbados   🇧🇩 bangladesh 🇧🇪 belgium   🇧🇫 burkina_faso 🇧🇬 bulgaria   🇧🇭 bahrain 🇧🇮 burundi   🇧🇯 benin 🇧🇱 st_barthelemy   🇧🇲 bermuda 🇧🇳 brunei   🇧🇴 bolivia 🇧🇶 caribbean_netherlands   🇧🇷 brazil 🇧🇸 bahamas   🇧🇹 bhutan 🇧🇼 botswana   🇧🇾 belarus 🇧🇿 belize   🇨🇦 canada 🇨🇨 cocos_islands   🇨🇩 congo_kinshasa 🇨🇫 central_african_republic   🇨🇬 congo_brazzaville 🇨🇭 switzerland   🇨🇮 cote_divoire 🇨🇰 cook_islands   🇨🇱 chile 🇨🇲 cameroon   🇨🇳 cn 🇨🇴 colombia   🇨🇷 costa_rica 🇨🇺 cuba   🇨🇻 cape_verde 🇨🇼 curacao   🇨🇽 christmas_island 🇨🇾 cyprus   🇨🇿 czech_republic 🇩🇪 de   🇩🇯 djibouti 🇩🇰 denmark   🇩🇲 dominica 🇩🇴 dominican_republic   🇩🇿 algeria 🇪🇨 ecuador   🇪🇪 estonia 🇪🇬 egypt   🇪🇭 western_sahara 🇪🇷 eritrea   🇪🇸 es 🇪🇹 ethiopia   🇪🇺 eu european_union 🇫🇮 finland   🇫🇯 fiji 🇫🇰 falkland_islands   🇫🇲 micronesia 🇫🇴 faroe_islands   🇫🇷 fr 🇬🇦 gabon   🇬🇧 gb uk 🇬🇩 grenada   🇬🇪 georgia 🇬🇫 french_guiana   🇬🇬 guernsey 🇬🇭 ghana   🇬🇮 gibraltar 🇬🇱 greenland   🇬🇲 gambia 🇬🇳 guinea   🇬🇵 guadeloupe 🇬🇶 equatorial_guinea   🇬🇷 greece 🇬🇸 south_georgia_south_sandwich_islands   🇬🇹 guatemala 🇬🇺 guam   🇬🇼 guinea_bissau 🇬🇾 guyana   🇭🇰 hong_kong 🇭🇳 honduras   🇭🇷 croatia 🇭🇹 haiti   🇭🇺 hungary 🇮🇨 canary_islands   🇮🇩 indonesia 🇮🇪 ireland   🇮🇱 israel 🇮🇲 isle_of_man   🇮🇳 india 🇮🇴 british_indian_ocean_territory   🇮🇶 iraq 🇮🇷 iran   🇮🇸 iceland 🇮🇹 it   🇯🇪 jersey 🇯🇲 jamaica   🇯🇴 jordan 🇯🇵 jp   🇰🇪 kenya 🇰🇬 kyrgyzstan   🇰🇭 cambodia 🇰🇮 kiribati   🇰🇲 comoros 🇰🇳 st_kitts_nevis   🇰🇵 north_korea 🇰🇷 kr   🇰🇼 kuwait 🇰🇾 cayman_islands   🇰🇿 kazakhstan 🇱🇦 laos   🇱🇧 lebanon 🇱🇨 st_lucia   🇱🇮 liechtenstein 🇱🇰 sri_lanka   🇱🇷 liberia 🇱🇸 lesotho   🇱🇹 lithuania 🇱🇺 luxembourg   🇱🇻 latvia 🇱🇾 libya   🇲🇦 morocco 🇲🇨 monaco   🇲🇩 moldova 🇲🇪 montenegro   🇲🇬 madagascar 🇲🇭 marshall_islands   🇲🇰 macedonia 🇲🇱 mali   🇲🇲 myanmar 🇲🇳 mongolia   🇲🇴 macau 🇲🇵 northern_mariana_islands   🇲🇶 martinique 🇲🇷 mauritania   🇲🇸 montserrat 🇲🇹 malta   🇲🇺 mauritius 🇲🇻 maldives   🇲🇼 malawi 🇲🇽 mexico   🇲🇾 malaysia 🇲🇿 mozambique   🇳🇦 namibia 🇳🇨 new_caledonia   🇳🇪 niger 🇳🇫 norfolk_island   🇳🇬 nigeria 🇳🇮 nicaragua   🇳🇱 netherlands 🇳🇴 norway   🇳🇵 nepal 🇳🇷 nauru   🇳🇺 niue 🇳🇿 new_zealand   🇴🇲 oman 🇵🇦 panama   🇵🇪 peru 🇵🇫 french_polynesia   🇵🇬 papua_new_guinea 🇵🇭 philippines   🇵🇰 pakistan 🇵🇱 poland   🇵🇲 st_pierre_miquelon 🇵🇳 pitcairn_islands   🇵🇷 puerto_rico 🇵🇸 palestinian_territories   🇵🇹 portugal 🇵🇼 palau   🇵🇾 paraguay 🇶🇦 qatar   🇷🇪 reunion 🇷🇴 romania   🇷🇸 serbia 🇷🇺 ru   🇷🇼 rwanda 🇸🇦 saudi_arabia   🇸🇧 solomon_islands 🇸🇨 seychelles   🇸🇩 sudan 🇸🇪 sweden   🇸🇬 singapore 🇸🇭 st_helena   🇸🇮 slovenia 🇸🇰 slovakia   🇸🇱 sierra_leone 🇸🇲 san_marino   🇸🇳 senegal 🇸🇴 somalia   🇸🇷 suriname 🇸🇸 south_sudan   🇸🇹 sao_tome_principe 🇸🇻 el_salvador   🇸🇽 sint_maarten 🇸🇾 syria   🇸🇿 swaziland 🇹🇨 turks_caicos_islands   🇹🇩 chad 🇹🇫 french_southern_territories   🇹🇬 togo 🇹🇭 thailand   🇹🇯 tajikistan 🇹🇰 tokelau   🇹🇱 timor_leste 🇹🇲 turkmenistan   🇹🇳 tunisia 🇹🇴 tonga   🇹🇷 tr 🇹🇹 trinidad_tobago   🇹🇻 tuvalu 🇹🇼 taiwan   🇹🇿 tanzania 🇺🇦 ukraine   🇺🇬 uganda 🇺🇸 us   🇺🇾 uruguay 🇺🇿 uzbekistan   🇻🇦 vatican_city 🇻🇨 st_vincent_grenadines   🇻🇪 venezuela 🇻🇬 british_virgin_islands   🇻🇮 us_virgin_islands 🇻🇳 vietnam   🇻🇺 vanuatu 🇼🇫 wallis_futuna   🇼🇸 samoa 🇽🇰 kosovo   🇾🇪 yemen 🇾🇹 mayotte   🇿🇦 south_africa 🇿🇲 zambia   🇿🇼 zimbabwe     ","permalink":"https://laokong4628.github.io/zh-cn/posts/Emoji-%E6%94%AF%E6%8C%81.html/","tags":["emoji"],"title":"Emoji 支持"},{"categories":["android","studio"],"contents":"Getting started Android Studio 使用过程的问题和注意点 问题点  Failed to find Build Tools revision 23.0.\n解决方案\nOpen anroid/app/build.gradle and change buildToolsVersion \u0026ldquo;23.0.3 or other available SDK revision\u0026rdquo;\n  Failed to find gradle Tools revision 2.3.0.\n解决方案\nbuildscript { repositories { jcenter() } dependencies { classpath \u0026#39;com.android.tools.build:gradle:2.3.0\u0026#39; //注意：更换成自己的AS的版本 } } allprojects { repositories { jcenter() } } \u0026gt; \n","permalink":"https://laokong4628.github.io/zh-cn/posts/android-studio.html/","tags":["android","studio"],"title":"android-studio"},{"categories":["google"],"contents":"Getting started Modify and Notes    方法 具体使用(实例)     site content site:stackoverflow.com   site content site:stackoverflow.com   ","permalink":"https://laokong4628.github.io/zh-cn/posts/google.html/","tags":["google"],"title":"google"},{"categories":["hosts"],"contents":"Getting started Introduce  Introduce on the wikipedia:\nThe computer file hosts is an operating system file that maps hostnames to IP addresses. It is a plain text file. Originally a file named HOSTS.TXT was manually maintained and made available via file sharing by Stanford Research Institute for the ARPANET membership, containing the hostnames and address of hosts as contributed for inclusion by member organizations. The Domain Name System, first described in 1983 and implemented in 1984, automated the publication process and provided instantaneous and dynamic hostname resolution in the rapidly growing network. In modern operating systems, the hosts file remains an alternative name resolution mechanism, configurable often as part of facilities such as the Name Service Switch as either the primary method or as a fallback method.\n  Location in the file system:    Operating System Location     Unix, Unix-like, POSIX /etc/hosts   Microsoft Windows %SystemRoot%\\System32\\drivers\\etc\\hosts C:\\Windows\\System32\\Drivers\\etc   Android /etc/hosts     Modify and Notes 1.修改hosts文件 查询域名对应的ip地址  hosts域名解析\n   IP 域名     104.31.74.55 youneed.win   104.31.74.55 www.youneed.win   104.18.36.36 free-ss.site   104.18.36.36 free-ss.site   104.18.36.36 free-ss.site   199.232.96.133 raw.githubusercontent.com   192.30.255.112 github.com      sublimetext激活:\n   IP 域名     127.0.0.1 www.sublimetext.com   127.0.0.1 sublimetext.com   127.0.0.1 sublimehq.com   127.0.0.1 telemetry.sublimehq.com   127.0.0.1 license.sublimehq.com   127.0.0.1 45.55.255.55   127.0.0.1 45.55.41.223   0.0.0.0 license.sublimehq.com   0.0.0.0 45.55.255.55   0.0.0.0 45.55.41.223      linux 安装包镜像\n   IP 域名     2001:da8:d800:95::110 mirrors.ustc.edu.cn   202.141.160.110 mirrors.ustc.edu.cn   61.128.148.70 mirrors.aliyun.com   176.31.253.211 blackarch.org     ","permalink":"https://laokong4628.github.io/zh-cn/posts/hosts.html/","tags":["hosts"],"title":"hosts"},{"categories":["kodi"],"contents":"Getting started kodi 使用过程的问题和注意点 问题点  Youtube 直播插件API， id， secret key.\n解决方案\nhttps://www.youtube.com/watch?v=y6qnV4UFaDkn https://console.developers.google.com/apis/dashboard\n Go to `developers.google.com` \u0026amp; login to your Google account (you probably already will be but this step is added just to ensure you are) Now go to `console.developers.google.com` Click on `Create Project` in the top left You will now see a box labelled `Project name`. Give it a simple name you can easily recognise and then click `Create` Wait for the notification (top right) saying the project has been created Now click on the `Google APIs logo` in the top left Select `Library` from the left hand menu Scroll down and select `YouTube Data API vX` Select Enable on the next screen Select `Create Credentials` on the right hand side of the screen Click on the `Dropdown Box` Select `YouTube Data API vX` Now click on the `Where will you be calling the API` from `dropdown box` In the `What data will you be accessing box` check `Public Data` Now click on `What credentials do I need`? You will now see your API key. `Click on Copy` on the right hand side and then click `done` Now you have it copied `save it to a text file` as we need to now get the ID \u0026amp; secret After clicking done you will be back at the screen where we clicked on `Library`. Look on the left hand side again and click on `OAuth consent screen` Click `External` and then `Create` Enter a `name` (just use the same name as you did at the beginning) Scroll to the bottom and click `Save` Now click on `Credentials` in the left hand menu Now click Create `Credentials` in the top left Select `OAuth Client ID` Click on `Application Type` and select `TVS and Limited Input Devices` You now need to give it a name. I just left it as TV Client 1 Select Create You will now see a box with your Client ID and Secret. Copy both and add to the text file where we saved the API key before Now open YouTube on `Kodi` Scroll down to `Settings` Highlight `API` in the left hand menu Now paste your `API, Client ID and Secret` in the corresponding boxes on the right and then click `OK` YouTube should now no longer give you API errors  Failed to find gradle Tools revision 2.3.0.\n解决方案\nbuildscript { repositories { jcenter() } dependencies { classpath \u0026#39;com.android.tools.build:gradle:2.3.0\u0026#39; //注意：更换成自己的AS的版本 } } allprojects { repositories { jcenter() } } \u0026gt; \n","permalink":"https://laokong4628.github.io/zh-cn/posts/kodi.html/","tags":["kodi"],"title":"kodi"},{"categories":["linux","find","grep"],"contents":"Getting started linux 使用过程中收集的要点和助手    描述 指令     查找当前目录下面需要的文件和文件夹（包括子目录） ls -lR |grep -v '^d' | awk '{print $9}' |tr -s '\\n'   查看当前目录下面的文件个数（包括子目录） ls -lR | grep \u0026quot;^-\u0026quot; | wc -l   查看当前目录下面的文件个数（包括子目录） ls -lR |grep -v '^d' | wc -l   查看当前目录下面的文件和文件夹个数 ls -l | grep \u0026quot;^-\u0026quot; | wc -l   显示当前目录下面全部文件（包括子目录） ls -lR |grep -v '^d'|awk '{print $9}' |tr -s '\\n'   查找当前目录下的所有目录 ls -lR |grep -v '^d'|awk '{print $9}' |tr -s '\\n'   只显示文件 grep '^d'   只显示文件夹 grep '^-'   只删除当前目录下的文件不删除文件夹 grep '^-'   查看文件的前10行 head -n 10 file或者awk 'NR\u0026lt;6' file   查看文件的最后10行 tail -n 10 file   显示文件某一行(line0)到另外一行(line1)的内容 cat file | tail -n +line0 | head -n (line1-line0)或者sed -n '5,10p' file   显示文件某一行(line0)到另外一行(line1)的内容 cat file | head -n line1 | tail -n +line0   ","permalink":"https://laokong4628.github.io/zh-cn/posts/linux-find-grep.html/","tags":["linux","find","grep"],"title":"linux-find-grep"},{"categories":["Linux"],"contents":"Linux命令英文全称 注意  这篇文章转载自(https://blog.csdn.net/alex_sym/article/details/7409566).   su：Swith user 切换用户，切换到root用户 cat: Concatenate 串联 uname: Unix name 系统名称 df: Disk free 空余硬盘 du: Disk usage 硬盘使用率 chown: Change owner 改变所有者 chgrp: Change group 改变用户组 ps：Process Status 进程状态 tar：Tape archive 解压文件 chmod: Change mode 改变模式 umount: Unmount 卸载 ldd：List dynamic dependencies 列出动态相依 insmod：Install module 安装模块 rmmod：Remove module 删除模块 lsmod：List module 列表模块 alias :Create your own name for a command bash :GNU Bourne-Again Shell linux内核 grep:global regular expression print httpd :Start Apache ipcalc :Calculate IP information for a host ping :Send ICMP ECHO_Request to network hosts reboot: Restart your computer sudo:Superuser do /bin = BINaries /dev = DEVices /etc = ETCetera /lib = LIBrary /proc = PROCesses /sbin = Superuser BINaries /tmp = TeMPorary /usr = Unix Shared Resources /var = VARiable ? FIFO = First In, First Out GRUB = GRand Unified Bootloader IFS = Internal Field Seperators LILO = LInux LOader MySQL = My最初作者的名字SQL = Structured Query Language PHP = Personal Home Page Tools = PHP Hypertext Preprocessor PS = Prompt String Perl = \u0026#34;Pratical Extraction and Report Language\u0026#34; = \u0026#34;Pathologically Eclectic Rubbish Lister\u0026#34; Python Monty Python\u0026#39;s Flying Circus Tcl = Tool Command Language Tk = ToolKit VT = Video Terminal YaST = Yet Another Setup Tool apache = \u0026#34;a patchy\u0026#34; server apt = Advanced Packaging Tool ar = archiver as = assembler bash = Bourne Again SHell bc = Basic (Better) Calculator bg = BackGround cal = CALendar cat = CATenate cd = Change Directory chgrp = CHange GRouP chmod = CHange MODe chown = CHange OWNer chsh = CHange SHell cmp = compare cobra = Common Object Request Broker Architecture comm = common cp = CoPy cpio = CoPy In and Out cpp = C Pre Processor cups = Common Unix Printing System cvs = Current Version System daemon = Disk And Execution MONitor dc = Desk Calculator dd = Disk Dump df = Disk Free diff = DIFFerence dmesg = diagnostic message du = Disk Usage ed = editor egrep = Extended GREP elf = Extensible Linking Format elm = ELectronic Mail emacs = Editor MACroS eval = EVALuate ex = EXtended exec = EXECute fd = file descriptors fg = ForeGround fgrep = Fixed GREP fmt = format fsck = File System ChecK fstab = FileSystem TABle fvwm = F*** Virtual Window Manager gawk = GNU AWK gpg = GNU Privacy Guard groff = GNU troff hal = Hardware Abstraction Layer joe = Joe\u0026#39;s Own Editor ksh = Korn SHell lame = Lame Ain\u0026#39;t an MP3 Encoder lex = LEXical analyser lisp = LISt Processing = Lots of Irritating Superfluous Parentheses ln = LiNk lpr = Line PRint ls = list lsof = LiSt Open Files m4 = Macro processor Version 4 man = MANual pages mawk = Mike Brennan\u0026#39;s AWK mc = Midnight Commander mkfs = MaKe FileSystem mknod = MaKe NODe motd = Message of The Day mozilla = MOsaic GodZILLa mtab = Mount TABle mv = MoVe nano = Nano\u0026#39;s ANOther editor nawk = New AWK nl = Number of Lines nm = names nohup = No HangUP nroff = New ROFF od = Octal Dump passwd = PASSWorD pg = pager pico = PIne\u0026#39;s message COmposition editor pine = \u0026#34;Program for Internet News \u0026amp; Email\u0026#34; = \u0026#34;Pine is not Elm\u0026#34; ping = Packet InterNet Grouper pirntcap = PRINTer CAPability popd = POP Directory pr = pre printf = PRINT Formatted ps = Processes Status pty = pseudo tty pushd = PUSH Directory pwd = Print Working Directory rc = runcom = run command, shell rev = REVerse rm = ReMove rn = Read News roff = RunOFF rpm = RPM Package Manager = RedHat Package Manager rsh, rlogin, = Remote rxvt = ouR XVT sed = Stream EDitor seq = SEQuence shar = SHell ARchive slrn = S-Lang rn ssh = Secure SHell ssl = Secure Sockets Layer stty = Set TTY su = Substitute User svn = SubVersioN tar = Tape ARchive tcsh = TENEX C shell telnet = TEminaL over Network termcap = terminal capability terminfo = terminal information tr = traslate troff = Typesetter new ROFF tsort = Topological SORT tty = TeleTypewriter twm = Tom\u0026#39;s Window Manager tz = TimeZone udev = Userspace DEV ulimit = User\u0026#39;s LIMIT umask = User\u0026#39;s MASK uniq = UNIQue vi = VIsual = Very Inconvenient vim = Vi IMproved wall = write all wc = Word Count wine = WINE Is Not an Emulator xargs = eXtended ARGuments xdm = X Display Manager xlfd = X Logical Font Description xmms = X Multimedia System xrdb = X Resources DataBase xwd = X Window Dump yacc = yet another compiler compiler ","permalink":"https://laokong4628.github.io/zh-cn/posts/Linux%E5%91%BD%E4%BB%A4%E8%8B%B1%E6%96%87%E5%85%A8%E7%A7%B0.html/","tags":["Linux"],"title":"Linux命令英文全称"},{"categories":["mariaDB","Mysql"],"contents":"Getting started mariaDB-Mysql数据库相关 常用指令    方法 具体使用(实例)     本地登录MySQL mysql -u root -p //root是用户名，输入这条命令按回车键后系统会提示你输入密码   指定端口号登录MySQL数据库 mysql -u root -p -P 3306，注意指定端口的字母P为大写，而标识密码的p为小写。MySQL默认端口号为3306   指定IP地址和端口号登录MySQL数据库 mysql -h ip -u root -p -P 3306例如：mysql -h 127.0.0.1 -u root -p -P 3306   查看多少个数据库 show databases;   使用该数据库 use database;   查看当前库下有哪些表 show tables;   查看表下面那些列 show columns from city;   查看表下面对应列的数据 SELECT NAME FROM AV_PICTURE;    问题点  [ERROR] /usr/bin/mariadbd: unknown option \u0026lsquo;\u0026ndash;auto-rehash\u0026rsquo;\n解决方案\nnano /etc/my.cnf 注销auto-rehash\n","permalink":"https://laokong4628.github.io/zh-cn/posts/mariaDB-Mysql.html/","tags":["mariaDB","Mysql"],"title":"mariaDB-Mysql"},{"categories":["python"],"contents":"Getting started python基本用法 python问题点  issues: If this fails your Python may not be configured for Tk resolution:\n conda问题点    描述 指令     查看安装了哪些包 conda list   查看当前存在哪些虚拟环境 conda env list或者conda info -e   检查更新当前conda conda update conda   Python创建虚拟环境 conda create -n your_env_name python=x.x或者conda create -n virtualenv python=3.9   激活或者切换虚拟环境 source activate your_env_nam(Linux)和activate your_env_name(Windows)   对虚拟环境中安装额外的包 conda install -n your_env_name [package]   关闭虚拟环境(即从当前环境退出返回使用PATH环境中的默认python版本) deactivate env_name(Windows) 或者 activate root切回root环境 和 source deactivate(Linux)   删除虚拟环境 conda remove -n your_env_name \u0026ndash;all   删除环境钟的某个包 conda remove \u0026ndash;name your_env_name package_name   设置国内镜像 conda config \u0026ndash;add channels https://mirrors.tuna.tsinghua.edu.cn   设置搜索时显示通道地址 conda config \u0026ndash;set show_channel_urls yes   恢复默认镜像 conda config \u0026ndash;remove-key channels   更新包 conda update package_name   一次性更新所有包 conda update \u0026ndash;all   查找包 conda search keyword   删除包 conda remove package_name   生成.condarc（windows：C:\\\\users\\\\username\\\\，linux：/home/username/）文件 conda config \u0026ndash;set show_channel_urls yes   To get all keys and their values: conda config \u0026ndash;get   To get the value of a specific key, such as channels: conda config \u0026ndash;get channels   设置国内镜像 conda config \u0026ndash;add channels https://mirrors.ustc.edu.cn/anaconda/pkgs/main   To remove an existing value, such as http://conda.anaconda.org/mutirri from a specific key, such as channels: conda config \u0026ndash;remove channels https://mirrors.ustc.edu.cn/anaconda/pkgs/main   To remove a key, such as channels, and all of its values: conda config \u0026ndash;remove-key channels   Display all identified configuration sources: conda config \u0026ndash;show-sources   Describe all available configuration options: conda config \u0026ndash;describe   Set the output verbosity to level 3 (highest) for the current activate environment: conda config \u0026ndash;set verbosity 3 \u0026ndash;env   查看conda版本 conda \u0026ndash;version   Install an earlier version of Python in Anaconda conda install -c anaconda python=3.7   关闭虚拟环境 conda deactivate   删除虚拟环境 conda remove \u0026ndash;name virtualenv \u0026ndash;all   激活conda source /opt/anaconda/bin/activate root     共享虚拟环境   conda env export \u0026ndash;file python36_env.yml\nconda env create -f /home/chb/code/python36_env.yml\nconda remove -n python36 \u0026ndash;all或者conda env remove -n python36\n  清华大学开源软件镜像站（推荐）  channels: - defaults show_channel_urls: true channel_alias: https://mirrors.tuna.tsinghua.edu.cn/anaconda default_channels: - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/pro - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2 custom_channels: conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud  上海交通大学开源镜像站  default_channels: - https://anaconda.mirrors.sjtug.sjtu.edu.cn/pkgs/r - https://anaconda.mirrors.sjtug.sjtu.edu.cn/pkgs/main custom_channels: conda-forge: https://anaconda.mirrors.sjtug.sjtu.edu.cn/cloud/ pytorch: https://anaconda.mirrors.sjtug.sjtu.edu.cn/cloud/ channels: - defaults  中国科学技术大学 USTC Mirror  --add channels \u0026#39;https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/\u0026#39; # lowest priority --add channels \u0026#39;https://mirrors.ustc.edu.cn/anaconda/pkgs/free/\u0026#39; --add channels \u0026#39;https://mirrors.ustc.edu.cn/anaconda/pkgs/main/\u0026#39; --add channels \u0026#39;https://mirrors.ustc.edu.cn/anaconda/cloud/msys2/\u0026#39; --add channels \u0026#39;https://mirrors.ustc.edu.cn/anaconda/cloud/bioconda/\u0026#39; --add channels \u0026#39;https://mirrors.ustc.edu.cn/anaconda/cloud/menpo/\u0026#39; # highest priority --set show_channel_urls True --set ssl_verify True  问题与解决方案   scrapy module install UnsatisfiableError: The following specifications were found to be incompatible with the existing python installation in your environment: Specifications:- scrapy\nconda create -n virtualenv3.6 python=3.6 conda activate virtualenv3.6 conda install -n virtualenv3.6 -c conda-forge scrapy\n  pil module install\nconda install -n virtualenv PIL\nUnsatisfiableError: The following specifications were found to be incompatible with the existing python installation in your environment: Specifications:- pil\nconda install -n virtualenv pillow\n  crypto.cipher module install\nconda install -n virtualenv crypto.cipher\nPackagesNotFoundError: The following packages are not available from current channels:\nconda install -n virtualenv pillow\n  mysql.connector module install\nconda install -n virtualenv crypto.cipher\nPackagesNotFoundError: The following packages are not available from current channels:\nconda install -n virtualenv3.6 mysql-connector\n  python代码相关  方法的使用    描述 指令     划分字符串为数组 split('\\n') \\n可以为任何其中字符   字符串的截取 str[0:1] 输出str位置0开始到位置1以前的字符, str为任意字符串   字符串的截取 str[1:6] 输出str位置1开始到位置6以前的字符, str为任意字符串   字符串的截取 str[-5:] 输出字符串右5位, str为任意字符串   字符串的合并 str = \u0026lsquo;0000\u0026rsquo; + str(num)   字符串的替换 str = str.replace(\u0026lsquo;k\u0026rsquo;,' 8') 将字符串里的k全部替换为8   字符串的查找 变量.find(\u0026ldquo;要查找的内容\u0026rdquo;[，开始位置，结束位置])，开始位置和结束位置，表示要查找的范围，为空则表示查找所有。查找到后会返回位置，位置从0开始算，如果没找到则返回-1。   字符串的分割 Python 分割字符串使用 变量.split(\u0026ldquo;分割标示符号\u0026rdquo;[分割次数])，分割次数表示分割最大次数，为空则分割所有。   Python 字典(Dictionary) keys() 函数以列表返回一个字典所有的键。 dict.keys()   Python判断列表中是否存在某元素 in\t如果在指定的序列中找到值返回 True，否则返回 False//not in\t如果在指定的序列中没有找到值返回 True，否则返回 False   Python判断列表中是否存在某元素 in\t如果在指定的序列中找到值返回 True，否则返回 False//not in\t如果在指定的序列中没有找到值返回 True，否则返回 False     代码问题   TypeError: \u0026lsquo;str\u0026rsquo; object does not support item assignment\n解决方案\n将其他类型转换成字串形式\n  多个循环嵌套不支持\n解决方案\n自定义方法解决，再调用方法\n  TypeError: \u0026lsquo;Response\u0026rsquo; object has no attribute \u0026lsquo;getitem'\n解决方案\n自定义方法解决，再调用方法\n  在循环Python中将字典追加到列表出现卡死\n解决方案\nyourlist.append(yourdict.copy())\n","permalink":"https://laokong4628.github.io/zh-cn/posts/python.html/","tags":["python"],"title":"python"},{"categories":["react"],"contents":"Getting started 1. React开发环境准备  1.安装node.js,查看node -v，npm -V验证安装。\n2.方案一：\n3.npx create-react-app my-app\n4.cd my-app\n5.npm start\n6.方案二：\n7.npm install -g create-react-app 8.cd dir(你项目的目录)\n9.create-react-app my-app 10.cd my-app\n11.yarn start\n 2. React工程目录文件结构介绍  1.cd my-app。\n2.npm run start 。\n3.文件介绍：\n4.readme.md 项目介绍。\n5.package.json node包文件，脚手架自动生成文件。\n6.node_modules 第三方模块包。\n7.mainfest.json app的快捷方式。\n8.src 项目所有源代码文件夹，index.js整个程序运行的入口引用文件，app.test.js自动化测试文件。\n 3. React中的组件  1.导入组件 import React, { Component } form 'react';。\n2.导出组件 export default App; App子类继承组件（Component）。\n3.挂载App组件到父节点下，ReactDOM.render(\u0026lt;App /\u0026gt;, document.getElementById('root'));。\n 4. React中最基础的JSX语法  1.标签变成组件，渲染。\n2.自定义组件（组件自定义名称大写字母开头），渲染。\n3.JSX语法注释 ,{/\\*content\\*/}。\n4.引用CSS文件，import './style.css',\u0026lt;input className = \u0026quot;input\u0026quot; /\u0026gt;。\n5.标签转义，dangerouslySetInnerHTML={{__html: item}}。\n6.\u0026lt;lable htmlFor=\u0026quot;insertArea\u0026quot;\u0026gt;输入内容\u0026lt;/lable\u0026gt;, **\u0026lt;input id = \u0026quot;insertArea\u0026quot; /\u0026gt;**。\n 5. React编写TodoList功能  1.TodoList替代App组件。\n2.创建TodoList组件。\n3.render return 返回元素必须包含在一个标签中。通过Fragment组件，Fragment占位符隐藏标签，内容放在之间。\n 5. React中的响应式设计思想和事件绑定  1.首先定义数据函数:（constructor(props){super(props);this.state={inputvalue:'可以设置预定值',list:[]}}）。\n2.数据与对应的组件标签``响应，\u0026lt;input value={this.state.inputvalue}/\u0026gt;。\n3.事件绑定。\n \u0026lt;input value={this.state.inputvalue} onChange={this.handleInputChange.`bind`(this)}/\u0026gt;, `控制台console`显示事件`变化`：handleInputChange(e){ this.`setState`({inputvalue:e.target.value}) console.log(e.`target`.value) } 6. React实现TodoList列表新增删除功能  1.首先定义提交按钮:\u0026lt;button onClick={this.handleBtnClick.bind(this)}\u0026gt;提交\u0026lt;/button\u0026gt;。\n2.定义handleBtnClick函数，handleBtnClick(){}。\n3.定义列表和对应的组件标签，list:[] 和 \u0026lt;ul\u0026gt;。\n \u0026lt;ul\u0026gt;{ this.state.list.map( (item, index) =\u0026gt; {return \u0026lt;li key={index}`(忽略警告)`\u0026gt;{item}\u0026lt;/li\u0026gt;} ) } \u0026lt;/ul\u0026gt;  4.事件绑定，点击提交，数据追加到list数组列表。\n handleBtnClick(){ this.setState(){ list:[...this.state.list, this.state.inputvalue], inputvalue:\u0026#39;\u0026#39;(`清空输入框`) } }  5.事件绑定，点击数据，数据从list数组列表中删除。\n \u0026lt;ul\u0026gt;{this.state.list.map( (item, index) =\u0026gt; {return \u0026lt;li key={index} onClick={this.handleItemDelete.bind(this, index)}\u0026gt;{item}\u0026lt;/li\u0026gt;})}\u0026lt;/ul\u0026gt;， handleItemDelete(index){ const list = [...`展开运算符`this.state.list]; list.splice(index, 1); this.setState({ list:list }) } 7. React组件与组件之间的传值，组件拆分  1.创建拆分组件，组件引用拆分组件，return (\u0026lt;拆分组件 /\u0026gt;),组件为树形结构。\n2.组件间参数传值。\n `父组件`：return (\u0026lt;拆分组件 content={value}/\u0026gt;), `子组件`：return (\u0026lt;div\u0026gt;{this.props.content}\u0026lt;/div\u0026gt;)  3.子组件事件绑定，点击标签，对应相应事件处理。\n return ( \u0026lt;div onClick={this.handleClick}\u0026gt;{this.props.content}\u0026lt;/div\u0026gt; ), handleClick(){ alert(1); }  4.子组件事件绑定，点击标签，对应相应事件处理，删除item。\n return ( \u0026lt;div onClick={this.handleClick}\u0026gt;{this.props.content}\u0026lt;/div\u0026gt; ), `父组件`：return (\u0026lt;拆分组件 content={value} index={index} deleteItem={this.handleItemDelete.bind(this)}/\u0026gt;)， return (\u0026lt;div onClick={this.handleClick}\u0026gt;{this.props.content}\u0026lt;/div\u0026gt;),handleClick(){ alert(this.props.index); }, constructor(props){ super(props); this.handleClick=this.handleClick.bind(this) }, handleClick(){ this.props.deleteItem(this.props.index) } 8. React的特点  1.声明式开发。\n2.可以和其他框架并存。\n3.组件化。\n4.单向数据流。\n5.视图层框架。\n6.函数式开发。\n 10. React Developer Tools的安装及使用  1.chrome Extensions： React Developer Tools\n 9. PropTypes与DefaultProps的应用  1.导入PropTypes包。\n2.组件.propTypes={test: PropTypes.string.isRequired必须值, var: PropTypes.string, method: PropTypes.func, index: PropTypes.number}，定义组件值的属性（类型）。\n3.DefaultProps默认值，.组件.DefaultProps={test: \u0026lsquo;hello world\u0026rsquo;}。\n 11. React中的虚拟DOM  1.定义state数据。\n2.JSX模板。\n3.数据 + 模板 结合生成真实的DOM， 来显示。\n4.state 发生变化。\n5.数据 + 模板 结合生成真实的DOM， 替换原始的DOM。\n缺陷 生成两次DOM片段，替换过程非常耗性能。\n优化。\n1.定义state数据。\n2.JSX模板。\n3.数据 + 模板 结合生成真实的DOM， 来显示。\n4.state 发生变化。\n5.数据 + 模板 结合生成真实的DOM， 并不直接替换原始的DOM。\n6.新的DOM（DocumentFragment）和原始的DOM作对比，找出差异。\n7.找出发生变化的组件元素。\n8.只用新的DOM中的组件元素替换老的DOM中的input元素。\n缺陷 性能提升并不明显\n优化\n1.定义state数据。\n2.JSX模板。\n3.数据 + 模板 结合生成真实的DOM， 来显示。\n4.生成虚拟DOM(虚拟DOM就是一个JS对象，用来描述真正的DOM)（创建对象有性能损耗），用虚拟DOM的结构生成真实的DOM,来显示。\n5.state 发生变化。\n6.生成新的虚拟DOM。\n7.比较虚拟BOM与新的虚拟DOM的区别。\n8.直接操作DOM改变其中内容。\n 12. React中ref的使用  1.setState是异步函数，处理时最好将语句放在回调函数后面。\n2.ref 即reference，引用指向当前标签。\n3.\u0026lt;input ref={ (input) =\u0026gt; {this.input = input}}/\u0026gt;。\n4.函数调用时，直接var value = this.input.value。\n 13. React的生命周期函数  1.生命周期函数是指在某一时刻组件会自动调用执行的函数。\n2.constructor函数在组件创建的时候调用，render在数据发生变化的时候调用，都是生命周期函数。componentWillMount在组件即将被挂载到页面上的时刻被自动调用,componentDidMount在组件被挂载到页面之后被自动调用,shouldComponentUpdate在组件被更新之前自动执行，返回布尔值（bool），。true执行，false不执行。componentWillUpdate在shouldComponentUpdate之后执行，shouldComponentUpdate返回true才执行，组件被更新之前自动执行。componentDidUpdate组件更新完成后自动执行。componentWillRecieveprops存在子组件中，当一个组件从父组件接受参数，只要父组件的render函数被重新执行了，子组件的这个生命周期函数就会被执行，第一次存在于父组件中不会执行，已经存在父组件中才会执行。componentWillUnmount这个组件即将从页面中剔除时，才会执行。\n3.使用场景\n4.render生命周期函数必须存在，其他生命周期函数可有可无。\n5.shouldComponentUpdate接受两个参数:nextProps,nextState。\n6.componentDidMount处理AJAX异步请求，安装AJAX模块，yarn add axios.导入AJAX模块，import axios from 'axios',调用axios，axios.get('/api/组件')。\n ","permalink":"https://laokong4628.github.io/zh-cn/posts/react.html/","tags":["react"],"title":"react"},{"categories":["rsync"],"contents":"Getting started rsync介绍  rsync 是 Linux 系統上最常被用來複製與備份檔案的工具，它可以處理本機或遠端的檔案同步工作，藉由 rsync 指令可以讓管理者很方便的將兩地的資料同步，不管是同一台電腦或是透過網際網路連線的兩台伺服器，使用方式都類似，以下是 rsync 的使用教學以及常用的指令範例。\n 基本用法  1.参数 -r rsync -r source destination\n使用 rsync 命令时，可以作为cp和mv命令的替代方法，将源目录同步到目标目录。-r表示递归，即包含子目录。注意，-r是必须的，否则 rsync 运行不会成功。source目录表示源目录，destination表示目标目录。\nrsync -r source1 source2 destination\n多个文件或目录需要同步，source1、source2都会被同步到destination目录。\n  2.参数 -a rsync -a source destination\n-a参数可以替代-r，除了可以递归同步以外，还可以同步元信息（比如修改时间、权限等）。由于 rsync 默认使用文件大小和修改时间决定文件是否需要更新，所以-a比-r更有用。目标目录destination如果不存在，rsync 会自动创建。执行上面的命令后，源目录source被完整地复制到了目标目录destination下面，即形成了destination/source的目录结构。\nrsync -a source/ destination\n只想同步源目录source里面的内容到目标目录destination，则需要在源目录后面加上斜杠。上面命令执行后，source目录里面的内容，就都被复制到了destination目录里面，并不会在destination下面创建一个source子目录。\n  3.参数 -n rsync -anv source/ destination\n上面命令中，-n参数模拟命令执行的结果，并不真的执行命令。-v参数则是将结果输出到终端，这样就可以看到哪些内容会被同步。如果不确定 rsync 执行后会产生什么结果，可以先用-n或--dry-run参数模拟执行的结果。\n  4.参数 \u0026ndash;delete rsync -av \u0026ndash;delete source/ destination\n上面命令中，\u0026ndash;delete参数会使得destination成为source的一个镜像。默认情况下，rsync 只确保源目录的所有内容（明确排除的文件除外）都复制到目标目录。它不会使两个目录保持相同，并且不会删除文件。如果要使得目标目录成为源目录的镜像副本，则必须使用\u0026ndash;delete参数，这将删除只存在于目标目录、不存在于源目录的文件。\n  5.参数 \u0026ndash;exclude rsync -av \u0026ndash;exclude='*.txt' source/ destination 或者 rsync -av \u0026ndash;exclude \u0026lsquo;*.txt\u0026rsquo; source/ destination\n上面命令排除了所有 TXT 文件。注意，rsync 会同步以\u0026quot;点\u0026quot;开头的隐藏文件，如果要排除隐藏文件，可以这样写\u0026ndash;exclude=\u0026quot;.*\u0026quot;。我们希望同步时排除某些文件或目录，这时可以用--exclude参数指定排除模式。\nrsync -av \u0026ndash;exclude \u0026lsquo;dir1/*\u0026rsquo; source/ destination\n如果要排除某个目录里面的所有文件，但不希望排除目录本身，可以写成上面命令。\nrsync -av \u0026ndash;exclude \u0026lsquo;file1.txt\u0026rsquo; \u0026ndash;exclude \u0026lsquo;dir1/*\u0026rsquo; source/ destination\n多个排除模式，可以用多个\u0026ndash;exclude参数。\nrsync -av \u0026ndash;exclude={\u0026lsquo;file1.txt\u0026rsquo;,\u0026lsquo;dir1/*'} source/ destination\n多个排除模式也可以利用 Bash 的大扩号的扩展功能，只用一个\u0026ndash;exclude参数。\nrsync -av \u0026ndash;exclude-from=\u0026lsquo;exclude-file.txt\u0026rsquo; source/ destination\n如果排除模式很多，可以将它们写入一个文件，每个模式一行，然后用\u0026ndash;exclude-from参数指定这个文件。\n  6.参数 \u0026ndash;include rsync -av \u0026ndash;include=\u0026quot;.txt\u0026quot; \u0026ndash;exclude='\u0026rsquo; source/ destination\n上面命令指定同步时，排除所有文件，但是会包括 TXT 文件。\n  7.参数 SSH 协议远程同步 rsync -av source/ username@remote_host:destination 早期 rsync： rsync -av -e ssh source/ user@remote_host:/destination\nrsync 除了支持本地两个目录之间的同步，也支持远程同步。它可以将本地内容，同步到远程服务器。由于早期 rsync 不使用 SSH 协议，需要用-e参数指定协议，后来才改的。\nrsync -av username@remote_host:source/ destination\n也可以将远程内容同步到本地。\nrsync -av -e \u0026lsquo;ssh -p 2234\u0026rsquo; source/ user@remote_host:/destination\n上面命令中，-e参数指定 SSH 使用2234端口。\n  8.参数 rsync 协议远程同步 rsync -av source/ 192.168.122.32::module/destination\n除了使用 SSH，如果另一台服务器安装并运行了 rsync 守护程序，则也可以用rsync://协议（默认端口873）进行传输。具体写法是服务器与目标目录之间使用双冒号分隔::。注意，上面地址中的module并不是实际路径名，而是 rsync 守护程序指定的一个资源名，由管理员分配。\nrsync rsync://192.168.122.32\n如果想知道 rsync 守护程序分配的所有 module 列表。\nrsync -av source/ rsync://192.168.122.32/module/destination\nrsync 协议除了使用双冒号，也可以直接用rsync://协议指定地址。\n  9.常用参数  -v :展示详细的同步信息 -a :归档模式，相当于 -rlptgoD -r :递归目录 -l :同步软连接文件 -p :保留权限 -t :将源文件的\u0026quot;modify time\u0026quot;同步到目标机器 -g :保持文件属组 -o :保持文件属主 -D :和\u0026ndash;devices \u0026ndash;specials一样，保持设备文件和特殊文件 -z :发送数据前，先压缩再传输 -H :保持硬链接 -n :进行试运行，不作任何更改 -P same as \u0026ndash;partial \u0026ndash;progress \u0026ndash;partial :支持断点续传 \u0026ndash;progress :展示传输的进度 \u0026ndash;delete :如果源文件消失，目标文件也会被删除 \u0026ndash;delete-excluded :指定要在目的端删除的文件 \u0026ndash;delete-after :默认情况下，rsync是先清理目的端的文件再开始数据同步；如果使用此选项，则rsync会先进行数据同步，都完成后再删除那些需要清理的文件。 \u0026ndash;exclude=PATTERN :排除匹配PATTERN的文件 \u0026ndash;exclude-from=FILE :如果要排除的文件很多，可以统一写在某一文件中 -e ssh :使用SSH加密隧道传输\n ","permalink":"https://laokong4628.github.io/zh-cn/posts/rsync.html/","tags":["rsync"],"title":"rsync"},{"categories":["wifi","network"],"contents":"Getting started Wifi network 相关指令    描述 指令     获取当前位置网络wifi的SSID nmcli -t -f active,ssid dev wifi |cut -d\\: -f2   ","permalink":"https://laokong4628.github.io/zh-cn/posts/wifi-network.html/","tags":["wifi","network"],"title":"wifi network"},{"categories":["图片处理"],"contents":"Getting started  linux 下图片格式装换 convert 1.jpg 2.png\n ","permalink":"https://laokong4628.github.io/zh-cn/posts/%E5%9B%BE%E7%89%87%E5%A4%84%E7%90%86.html/","tags":["图片处理"],"title":"图片处理"},{"categories":["语言"],"contents":"所有经过外语单词短语记录复习 英语 robust: 强健的(49%)，粗野的(21%)，耐用的(17%)，浓的(9%)，稳固的(4%) ship with: 附带 sketch： 素描, 草图, 小品 advocacy: 拥护, 支持, 鼓吹, 辩护, 辩护术 permalink: 永久链接；永久连结；固定链接 cryptographic:密码的(100%),关于暗号的，用密码写的(adj) terse: 简洁的(77%)，简明的(23%)(adj.)简洁的，精练的，扼要的 Flickr: 网络相簿(n.) finnicky: (=finicky)吹毛求疵的, 难以讨好的(adj.) travis: 特拉维斯(姓氏(50%)，男子名)(50%), (n.)特拉维斯（男子名）；崔维斯合唱团 Scottish: 苏格兰的(59%)，苏格兰人(32%)，苏格兰语(9%), (n.)苏格兰人；苏格兰语, (adj.)苏格兰的；苏格兰人的；苏格兰语的 fanart: [网络]爱好者；手绘；献礼 joypad: 游戏手柄(100%), (n.)控制器设置；手柄 microcosm: (n.) 小宇宙, 小世界, 人类, 缩影(71%)，微观世界(15%)，小宇宙(14%), microcosmos eroded: (a.) 被侵蚀的, 损坏了 Manchu: 满族的(40%)，满族人(40%)，满族语(20%), (n.)满语；满族人, (adj.)满族的；满语的 mundane: 世俗的(43%)，平凡的(42%)，世界的(15%), adj.世俗的，平凡的；世界的，宇宙的 trove:贵重发现物(50%)，珍藏品(50%), n.被发现的东西；收藏的东西, n.(Trove)人名；(德)特罗韦 dishevelled: 散乱的(49%)，蓬乱的(29%)，=disheveled.(11%)，动词dishevel的过去式和过去分词形式.(11%) coquettish: 卖弄风情的(58%)，妖艳的(28%)，婀娜多姿的(14%), (adj.)妖艳的；卖弄风情的；迷人的 crept：匍匐爬行（creep的过去式） vigilance: 警惕(75%)，警戒(25%) laity: 外行人(53%)，普通信徒(47%) denunciation: 谴责(100%), (n.)谴责，斥责；告发 energetic: 精力旺盛的(42%)，能量的(31%)，有力的(27%), (adj.)精力充沛的；积极的；有力的 ignominiously: 可耻地(100%), (adv.)可耻地 pyjamas: 睡衣裤(100%), (n.)睡衣；宽长裤 proletarian: (a.) 无产阶级的, (n.) 无产者 saturation： 饱和(70%)，饱和度(29%)，浸透(1%)， (n.)饱和；色饱和度；浸透；磁化饱和 粤语 老挝语/泰语 其他语种 ","permalink":"https://laokong4628.github.io/zh-cn/posts/%E5%A4%96%E8%AF%AD%E5%8D%95%E8%AF%8D%E7%9F%AD%E8%AF%AD%E8%AE%B0%E5%BD%95%E5%A4%8D%E4%B9%A0.html/","tags":["语言"],"title":"外语单词短语记录复习"},{"categories":["硬件测试相关"],"contents":"Getting started 一. PCBA测试  1.ICT ICT是In-Circuit Tester的简写，它是一种利用电脑技术，在大批量生产的电子产品生产线上，测试电路板上元器件是否正确及其参数、电路便装配是否正确的测试仪器。由于它不是模拟测试电路的功能、性能，所以也叫其为电路板的静态测试。\n  ICT的结构由电脑{电脑部分就是一台普通的PC机[CPU, 主板, 显卡, 内存, 硬盘, 电源, 机箱, 机箱风扇, cpu风扇散热（水冷，风冷）]，用其windows操作系统完成与测试软件的接口和在显示器上显示、打印、统计等功能}, 测试电路{测试电路分控制电路和开关电路。控制电路是控制对相应的元器件测试其参数。电阻测试其阻值，电容测试其容量，电感测其电感量等。开关电路是接通需测试的相应元器件，由继电器或CMOS半导体开关组成。}、测试压板{当压板上的塑料棒压住电路板往下压一段距离时，针床上测试针受到压缩力而良好地使测试点与测试电路连接，也就是被测元器件接入与测试电路。}及针床{测试用针床是用于接通ICT和被测电路板的一块工装板。工装板上根据电路板上的每一测试点的位置安装了一根测试针，测试针是带弹性可伸缩的，被测电路板压在针床上时，测试针和针床以及连接电缆，把电路板上每一个测试点连接到测试电路上。}和显示器、机械传动{机械传动部分包括气动压板、行程开关等机构。ICT是用压缩空气通过汽缸将压板压下、升上的。行程开关是当压板下压到指定的位置时该开关断开气路，压板停止下压动作。}等部分组成。软件部分是Windows操作系统和ICT测试软件。\n  ICT的结构如下：\n   ICT的结构 具体结构 详细介绍     电脑 CPU, 主板, 显卡, 内存, 硬盘, 电源, 机箱, 机箱风扇, cpu风扇散热（水冷，风冷， 显示器） 用于windows操作系统完成与测试软件的接口和在显示器上显示、打印、统计等功能   测试电路 控制电路， 开关电路 控制电路是控制对相应的元器件测试其参数， 开关电路是接通需测试的相应元器件。   机械传动 气缸， 气动压板， 行程开关， 光电感应器 ICT是用压缩空气通过汽缸将压板压下、升上的。行程开关是当压板下压到指定的位置时该开关断开气路，压板停止下压动作。   测试压板 压板 当压板上的塑料棒压住电路板往下压一段距离时，针床上测试针受到压缩力而良好地使测试点与测试电路连接，也就是被测元器件接入与测试电路。   针床 针床 用于接通ICT和被测电路板的一块工装板      ICT的特征如下：\n `最大测试点数`：表示设备最多能设多少个测试点。一般电阻、电容等元件只有两条引脚，每个元件只用两个测试点就够了。ICT有多个引脚，每条引脚都需要设一个测试点。元件越多，电路板越复杂，需要测试点越多。因此，测试仪需要足够多的测试点数。目前ICT的最大测试点数可达`2048`点，已足够用了。 `可测试的元器件种类`：测试开、短路，电阻、电容、电感、二极管， 三极管、稳压管、光耦、IC等多种元器件。 `测试速度`：测试一块电路板的最少时间。测试速度与电路板的复杂程度有关。 `测试范围`：电阻的测试范围：一般0.05Ω～40MΩ；电容的测试范围：一般1pF～40000μF；电感的测试范围：一般1μH～40H；测试电压一般为0～10V；测试电流一般为1μA～80mA；频率一般为1Hz～100KHz。 `电路板尺寸`：最大的电路板尺寸一般为460×350mm。 `电阻测试`：R=U/I。 `电容测试`：小电容的测试方法与电阻类似，不过是用交流信号，利用XC=U/I 同时，XC=1/(ωC) 而得C=I/(Uω)=I/(2πfU)F是测试频率，U、I是测试信号的电压和电流有效值。大容量的电容测试用DC方法，即用直流电压加在电容两端，充电流随时间或指数减少的规律，在测试时加一定的延时时间就可测出其容量。 `电感测试`：电感的测试方法和电容的测试类似，只用交流信号测试。 `二极管测试`：二极管正向测试时，加一正向电流在二极管上，二极管的正向压降为0.7V(硅材料管)，加一反向电流在二极管上，二极管压降会很大。 `三极管测试`：先测试bc极和be极之间的正向压降，这和二极管的测试方法相同。再测试三极管的放大作用：在be极加一基极电流，测试ce极之间的电压。例如：b、e极加1mA电流时，c、e之间的电压由原来2V降到0.5V，则三极管处于正常的放大工作状态。 `跳线测试`：跳线是跨接印制板做连线用的，只有通断两种情况。测试其电阻阻值就可以判断好坏。测试方法和测试电阻是相同的。 `IC测试`：一般地讲，对IC只测试其引脚是否会有连焊、虚焊的情况，至于IC内部性能如何是无法测试出来的。测试方法是将IC的各引脚对电源VCC引脚的正反向电压测试一遍，再将各引脚对IC接地端GND引脚的正反向电压测试一遍。与正常值进行比较，有不正常的可以判断该引脚连焊或虚焊。  ICT測試不良及常見故障的分析方法如下：\n   ICT測試不良 分析 原因 说明     开路不良 所谓开路不良就是指在某一个短路群中，各个测试点之间本来应该是短路，但却出现了某个测试点对其所在短路群的其它测试点是开路的。 (1)PCB Open；(2)零件造成的{A．立件与漏件；B．空焊；C．零件不良};(3)测试点有问题{A．探针未接触到；B．测试点氧化；C．测试点有东西挡住；D．测试点在防焊区} 在平常出现比较多的情况是立件于漏件，空焊，PCB Open和零件不良。对于立件和漏件可以通过目检查出；PCB Open只要细心查看两测试点之间的线路，看在测试点之间是否有断线的情况发生，零件不良造成的开路不良通常是由于电阻，电感等零件损坏而造成的其本体开路。如果将一块好的PCB板与之比较发现没有差异（通常比较的是电阻），则表明测试点有问题，需检查PCB板上的测试点是否有问题或检查治具上的测试针是否有问题。   短路不良 所谓短路不良是指存在于不同的短路群中的测试点在正常情况下应该是开路的，但却出现了短路的情况。 (1)零件短路（由于在零件两端存在有锡丝而造成短路）；(2)零零件不良，本体短路（通常是由于零件损坏了的缘故）;(3)PCB短路（存在比较多的情况是：出现短路不良的两个测试点的步线十分靠近，由于印刷的原因在某处出现了短路，尤其是在印有字迹的地方要特别注意，绝大部分多数的PCB短路都发生在这里。；（4）BGA短路（可能是BGA下方的锡球短路，也有可能是BGA本体短路），这比较麻烦，必须有90%以上的把握时才能拆BGA。 对于零件短路可以通过重新焊过该零件当可解决短路不良的情况，对于零件本体短路可以通过更换零件来加以解决；对于PCB短路应首先注意测试点之间的走线，在可能出现短路的地方（尤其是在有字迹遮住的地方）在没有找到其它原因的情况下最好用笔刀割一下，在进行这个操作的时候必须很小心，不要将步线刮断了而造成新的开路不良。如果是BGA内部短路而又必须拆下来的话，就应该先验证出是否为BGA零件不良，如果是零件不良则应该换上一个OK的BGA，注意一块PCBA板的BGA拆换次数不能超过3次，否则会因为PCB板局部受热次数过多而使PCB板发生变形。   零件不良 所谓零件不良是指在ICT测试时，显示“Open Fail”在零件不良打印报表中其量测值往往与该零件的标准值不一致，而存在一定的偏移，这种偏移有时很大，有时很小。 (A)M-V：9999.99 Dev：+999.9%{（1）空焊;（2）漏件；（3）PCB开路;（4）测试点有问题：a．针未接触到；b．测试点氧化；c．测试点有东西挡住；d．测试点在防焊区}；(B)如果测试值与标准值比较只是发生了较大的偏移，而不是量测值为无穷大的情况{（1）错件；（2）有内阻的被动组件的影响；（3）测试点有问题};(C)如果量测值与标准值比较只是发生了很小的偏移，这种情况多为零件误差引起的，但是为了准确起见，最好还是通过比较的方法看是否真的是由于误差的原因而造成的量测值偏移，如果由于误差的原因造成的话，需由工程人员作相应的程序调整。；（D）在进行了上面几步后就应该检查测试点（包括高测试点和低测试点）在检查测试点的过程中可能会发现{(1）PCB开路（大约占10% 的比例）；（2）测试点有为题：a．未接触到；b．测试点氧化；c．测试点有东西挡住；d．测试点在防焊区} A:对于测试点出现的问题首先应该查看测试点是否有氧化，测试点是否在防焊区，然后查看测试治具上对应的测试针是否为未接触到测试点或是由于测试点有东西挡住，至于其它的原因，在前面已有详细的阐述，这里便不再重复了。B:如果是电容错件，有两种方法进行量测：第一种方法是拆下来量测，但这种方法通常是用来量测大电容的，而且在量测之前必须知道它的容值，对于小电容无法准确量出，因为电容被焊接的关系，它的容值会发生改变；第二种方法是通过比较的方法直接在PCB板上进行量测，但必须注意所要比较PCB板应该是一块好的板子，并且注意到在量测时要保持测试笔的方向一致（即红、黑表笔所对应的电容两端应该一致）。这种方法也只能用来测量大电容。C:??。D：PCB开路应该进行分段量测；PCB短路有10%测不出，这可能是因为没有测试点或者是由于将10欧以下的电阻判断为短路了。在IC开路测试不良中，会出现电压值偏大的情况，出现这种情况的原因绝大部分部分在于PCB开路或存在有空焊。通过量测会发现，在电压偏大的两测试点之间的阻抗值偏大，为了查找出现这种情况的原因，最简便直接的方法就是同一块好的PCB板进行对比量测，有必要时可以将容易拆下来的零件拆下来加以验证，如果出现在BGA内部的话，就一定要加以验证，可以选择在PCB板正面进行线路切割（应以不要将PCB割坏为原则），然后在进行量测试，以确保的确是由于BGA内部空焊所造成的。      常见ICT设备 捷智300 / 德律tr510\n测试程式界面  | 零件 | max | min | actual | loc | | \u0026mdash;\u0026mdash;|\u0026mdash;\u0026mdash;-|\u0026mdash;\u0026mdash;-|\u0026mdash;\u0026mdash;-| | R(电阻)/压敏电阻(RT)/C(电容)/U\u0026amp;Q\u0026amp;N(光藕)/U\u0026amp;N(IC)/二极管,发光二极管(D,VD )/三极管,可控硅(V,VT)/蜂鸣器(B,BZ)/轻触开关(S)/继电器(J)/保险丝(F)/接插件(J)/变压器(B,T) | 4 | 1 | 2 | C1 |\n 2.FCT FCT英文全称为：FunctionalCircuitTest，即功能测试，一般专指PCBA上电后的功能测试，包括：电压、电流、功率、功率因素、频率、占空比、位置测定、LED亮度与颜色识别、LCD字符和颜色识别、声音识别、温度测量与控制、压力测量与控制、精密微量运动控制、FLASH和EEPROM在线烧录等功能参数的测量。它指的是针对测试目标板(UUT：UnitUnderTest)提供模拟的运行环境(激励和负载)，使其工作于各种设计状态，从而获取各个状态的参数来验证UUT的功能好坏的测试方法。简单地说，就是对UUT加载合适的激励和负载，测量其输出端响应是否满足设计要求。 FCT（功能测试）它指的是对测试目标板(UUT：Unit Under Test)提供模拟的运行环境, 使其工作于该环境下，从而获取到各个状态的参数来验证UUT的功能好坏的测试方法。\n功能测试系统的构成 1.系统控制中心：这部分一般是PC、MCU、ARM等小型或者中型的中央处理器组成，它主要作用是控制整个测试过程的进程，并对每一步的测试内容进行判断和记录，最终得出测试结果。它是整个测试系统的核心大脑。\n2.控制执行部分：控制执行部分主要由I/O部件组成，它是测试过程逻辑动作的感应和执行机构。系统通过它来搭建各种测试环境，实现测试功能。\n3.参数测量部分：测量部分主要由一些测量用的板卡、仪表组成。它主要可以完成测试过程中各种模拟或者数字量的采集工作。所以有时我们又称其为数据采集部分。\n4.数据处理和输出部分：每一步以及最终的测试结果，才是我们整个测试的目的。如何把这些结果和数据存储、输出，更方便于我们对PCBA产品质量进行有效控制，这就是数据处理和输出部分的职责。\n常见FCT设备 Siton FCT-750 /\n  3.AOI AOI（Automated Optical Inspection缩写）的中文全称是自动光学检测，是基于光学原理来对焊接生产中遇到的常见缺陷进行检测的设备。AOI是新兴起的一种新型测试技术，但发展迅速，很多厂家都推出了AOI测试设备。当自动检测时，机器通过摄像头自动扫描PCB，采集图像，测试的焊点与数据库中的合格的参数进行比较，经过图像处理，检查出PCB上缺陷，并通过显示器或自动标志把缺陷显示/标示出来，供维修人员修整。运用高速高精度视觉处理技术自动检测PCB板上各种不同贴装错误及焊接缺陷。PCB板的范围可从细间距高密度板到低密度大尺寸板，并可提供在线检测方案，以提高生产效率，及焊接质量。通过使用AOI作为减少缺陷的工具，在装配工艺过程的早期查找和消除错误，以实现良好的过程控制。早期发现缺陷将避免将坏板送到随后的装配阶段，AOI将减少修理成本将避免报废不可修理的电路板。 错误类型:\n   阶段 问题     刷锡后贴片前 桥接-移位-无锡-锡不足   贴片后回流焊前 移位，漏料、极性、歪斜、脚弯、错件   回流焊或波峰焊后 少锡/多锡、无锡短接 锡球 漏料-极性-移位脚弯错件   PCB行业裸板检测 ALL      AOI优点： AOI软件中有一个综合性的验证功能，它能减少检查的误报，保证检测程序无缺陷。它可以检查储存起来的有缺陷的样品，例如，修理站存放的样品，以及印刷了焊膏的空白印刷电路板。在优化阶段，在这方面花时间的原因是为了不让任何缺陷溜过去。所有已知的缺陷都必须检查，同时要把允许出现的误报数量做到最小。在针对减少误报而对任何程序进行调整时，要检查一下，看看以前检查出来的真正缺陷，是否得到维修站的证实。通过综合的核实，保证检查程序的质量，用于专门的制造和核查，同时对误报进行追踪。减少不良，提高良率，较少生产时间和成本。\nAOI不足： AOI只是用来减少目检的工作量，还不能够完全取代人工目检。软体设计还不够完整，例如：AOI无法明确区别出电极针痕、刮痧和污染。初期程式设计建立产品档比较耗时。线路和功能问题无法检测。\n  4.FVT FVT（Function Verification Test）功能检验测试，是印刷电路板测试的一种专业名称。其目的是为了抓出组装不良的板子，透过模拟电路板实装成整机时的全功能测试，以期抓出在组装成整机以前把所可能有瑕疵的电路组装板抓出来，免得组装成整机后才发现不良，还要全部拆掉重组造成工时浪费以及材料的损失。\n  光藕简介 光耦合器（opticalcoupler equipment，英文缩写为OCEP）亦称光电隔离器或光电耦合器，简称光耦。它是以光为媒介来传输电信号的器件，通常把发光器（红外线发光二极管LED）与受光器（光敏半导体管，光敏电阻）封装在同一管壳内。当输入端加电信号时发光器发出光线，受光器接收光线之后就产生光电流，从输出端流出，从而实现了“电—光—电”控制。以光为媒介把输入端信号耦合到输出端的光电耦合器，由于它具有体积小、寿命长、无触点，抗干扰能力强，输出和输入之间绝缘，单向传输信号等优点，在数字电路上获得广泛的应用。\n光藕分类 光耦分类:非线性光耦和线性光耦。 非线性光耦：适合于开关信号的传输（高低电平），不适合于传输模拟量。实际中常用。 线性光耦：以线性特性进行隔离控制。\n光藕图示  光藕图示\n\" 光藕图示 \n  三极管简介 三极管，全称应为半导体三极管，也称双极型晶体管、晶体三极管，是一种控制电流的半导体器件。其作用是把微弱信号放大成幅度值较大的电信号，也用作无触点开关。三极管是半导体基本元器件之一，具有电流放大作用，是电子电路的核心元件。三极管是在一块半导体基片上制作两个相距很近的PN结，两个PN结把整块半导体分成三部分，中间部分是基区，两侧部分是发射区和集电区，排列方式有PNP和NPN两种。\n光藕分类 晶体三极管（以下简称三极管）按材料分有两种：锗管和硅管。而每一种又有NPN和PNP两种结构形式，但使用最多的是硅NPN和锗PNP两种三极管，（其中，N是负极的意思（代表英文中Negative），N型半导体在高纯度硅中加入磷取代一些硅原子，在电压刺激下产生自由电子导电，而P是正极的意思（Positive）是加入硼取代硅，产生大量空穴利于导电）。两者除了电源极性不同外，其工作原理都是相同的。\n三极管工作原理 PNP型三极管工作流程图和NPN相比有以下相同和不同之处：\nPNP三极管的工作原理和NPN三极管是一样的，只是偏压方向，电流方向均相反，电子和空穴的角色互换。PNP三极管是利用Veb控制由射区经基区，入射到集电区的正电子，而NPN三极管则是利用Vbe加控制由射区经基区、入射到集电区的负电子。\nPNP/NPN型三极管相同和不同之处\n\" PNP/NPN型三极管相同和不同之处 \n 1、 NPN集电极电流产生为lbe，PNP集电极电流产生为leb。 2、 NPN发射区发射负电子，PNP发射区发射正电子。 3、 NPN集电区收集负电子，PNP集电区收集正电子。 4、 NPN电流方向为lce，PNP电流方向为lec。  PNP/NPN型三极管结构图示  PNP/NPN型三极管结构\n\" PNP/NPN型三极管结构 \nPNP/NPN型三极管工作原理图示  PNP/NPN型三极管工作原理\n\" PNP/NPN型三极管工作原理 \nNPN三极管：Vb\u0026lt;Ve （截止状态）; Vc\u0026gt;Vb\u0026gt;Ve（放大状态）; Vb\u0026gt;Ve Vb\u0026gt;Vc （饱和状态）;\nPNP三级管：Vb\u0026gt;Ve （截止状态）; Vc\u0026lt;Vb\u0026lt;Ve（放大状态）; Vb\u0026lt;Ve Vb\u0026lt;Vc（饱和状态）; “V”代表是电压。\nPNP/NPN型三极管工作原理\n\" PNP/NPN型三极管工作原理 \n正电子-空穴；负电子-自由电子\n在图的左边，当NPN三极管b极没有电压输入时，c极与e极之间没有电流通过。c极与e之间关闭，三极管处于截止状态。\n在图的右边，当NPN三极管b极输入一个正电压，由于电子作用，e极N区负电子被b极P区正电子吸引出来涌向（扩散）到基区，因为基区做的很薄，所以只有一部分负电子与正电子碰撞（复合）产生基极电流，另一部分负电子则在集电结附近聚集，由于电场作用聚集在集电结的负电子穿过（漂移）集电结，到达集电区后与聚集在c极（N型半导体端）正电子碰撞产生集电极电流\n从此可见，基极电流越大，集电极电流越大，即集电极输入一个小的电流，集电极就可得到一个大的电流，三极管此刻处于放大状态。注意：当基极电流到达一定程度，集电极电流不再升高。这时三极管失去电流放大作用，集电极和发射极之间的电压很小，集电极和发射极之间相当于开关的导通状态，此刻三极管处于饱和状态。\n","permalink":"https://laokong4628.github.io/zh-cn/posts/%E7%A1%AC%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%9B%B8%E5%85%B3.html/","tags":["硬件测试相关"],"title":"硬件测试相关"},{"categories":["浏览器"],"contents":"Getting started 火狐浏览器开启DNS-over-HTTPS（DoH）解决DNS污染 更新火狐浏览器至62以上版本（仅安卓、PC和Mac支持DoH功能），在浏览器地址栏输入about:config，点击“我了解此风险” 在新打开的页面顶部搜索框， 搜索network.trr 双击network.trr.mode，将值改为2（默认是 0；2 表示尝试使用 DoH，如果不行就退回到传统方式；5 表示任何情况下都不用 DoH 功能） 双击network.trr.uri，将值改为支持DoH的未污染服务器地址，可以输入一些公共的，如https://mozilla.cloudflare-dns.com/dns-query，也可以自己搭建。 通过以上步骤，你已经成功开启了火狐浏览器隐藏功能DoH，可以避免自己的DNS查询记录被监控收集和恶意篡改，不再受困于DNS污染而无法正常访问某些网站。 此外，你还可以在地址栏输入about:networking选择DNS选项，查看DNS查询状态。 chrome浏览器开启DNS-over-HTTPS（DoH）解决DNS污染 Open Settings: In your address bar, type the following and hit Enter chrome://flags/#dns-over-https. It takes you to Secure DNS lookups Enable DNS over HTTPS: Click on Secure DNS lookups radio button to enable DoH. Configure Cloudflare DNS: Your browser infers the DNS over HTTPS provider you want based on your system DNS. To benefit from Cloudflare DoH, make sure your system is properly configured. chromium浏览器开启DNS-over-HTTPS（DoH）解决DNS污染 /usr/bin/chromium %U –host-resolver-rules=“MAP * ~NOTFOUND , EXCLUDE 127.0.0.1” --enable-features=\u0026#34;dns-over-https\u0026lt;DoHTrial\u0026#34; --force-fieldtrials=\u0026#34;DoHTrial/Group1\u0026#34; --force-fieldtrial-params=\u0026#34;DoHTrial.Group1:server/https%3A%2F%2Fcloudflare-dns%2Ecom%2Fdns-query/method/POST my chrominum conf: /usr/bin/chromium %U --enable-features=\u0026#34;dns-over-https\u0026lt;DoHTrial\u0026#34; --force-fieldtrials=\u0026#34;DoHTrial/Group1\u0026#34; --force-fieldtrial-params=\u0026#34;DoHTrial.Group1:server/https%3A%2F%2Fcloudflare-dns%2Ecom%2Fdns-query/method/POST\u0026#34; --proxy-server=\u0026#34;socks5://127.0.0.1:7891\u0026#34; --host-resolver-rules=\u0026#34;MAP * ~NOTFOUND , EXCLUDE 127.0.0.1\u0026#34; 浏览器插件：  https-everywhere， swithyproxyomega, noscript, CanvasBlocker, Cookie-AutoDelete， adblockplus， WebRTC Leak Shield，Privacy Badger, Selenium IDE, WebRTC Network Limiter\n","permalink":"https://laokong4628.github.io/zh-cn/posts/%E7%BD%91%E9%A1%B5%E6%B5%8F%E8%A7%88%E5%99%A8.html/","tags":["浏览器"],"title":"网页浏览器"},{"categories":["软件测试"],"contents":"Getting started 一. 黑白盒测试  1.优秀公司\n  1.垃圾公司\n 广州市铂桥信息科技有限公司：培训机构!打着招聘岗位的培训机构! ","permalink":"https://laokong4628.github.io/zh-cn/posts/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95.html/","tags":["软件测试"],"title":"软件测试"},{"categories":["软件测试"],"contents":"Getting started-包括面试题 一. 黑白盒测试  1.黑盒测试和白盒测试\n黑盒测试：已知产品的功能设计规格，可以进行测试证明每个实现了的功能是否符合要求。\n白盒测试：已知产品的内部工作过程，可以进行测试证明每种内部操作是否符合设计规格要求，所有内部成分是否经过检查。\n  2.黑盒测试和白盒测试的区别\n    区别 黑盒测试 白盒测试     测试特点 测试功能 测试程序接口与结构   测试依据 需求规格说明书 软件程序   方法举例 等价类划分、边界值测试 逻辑覆盖   优点 能站在用户的立场上进行测试 对程序内部特定部位进行覆盖测试   缺点 不能测试程序内部特定部位，如程序有误，则无法发现 无法检验程序外部特性     注意 黑盒测试把程序看作一个不能打开的黑盒子，在完全不考虑程序内部结构和内部特性的情况下，针对“软件界面”和“软件功能”进行测试，只检查功能是否符合需求规格说明书能正常使用。因此黑盒测试又叫功能测试或数据驱动测试。首先了解产品需求，找出bug，\n  黑盒测试主要是为了发现以下错误：\n （1）是否有不正确或者遗漏了的功能； （2）在接口上，输入能否正确的接受？能否输出正确的结果？ （3）是否有数据结构错误或外部信息（例如数据库文件）访问错误？ （4）性能上是否能够满足要求？ （5）是否有初始化或终止性错误？ 黑盒的测试用例技术设计有三种： `边界值分析`、`等价类划分`、`错误推测法`。  白盒测试是对软件的过程性细节做细致的检查。这种方法是把测试对象看作一个打开的盒子，他允许测试人员利用程序内部的逻辑结构及有关信息，设计或选择测试用例，对程序所有逻辑路径进行测试。通过在不同点检查程序状态，确定实际状态是否与预期的状态一致。因此白盒测试又称为”结构测试“或”逻辑驱动测试“。白盒测试是按照程序内部的结构来测试程序，通过测试检验产品内部动作是否按照设计规格说明书的要求正常进行，检验程序中的每条通道是否都按照规定正常工作。\n  白盒测试主要是想对程序模块进行以下检查：\n （1）对程序模块的所有独立的执行路径至少测试一遍； （2）对所有的逻辑判定，取”真“与”假“的两种情况都能至少测一遍； （3）在循环的边界和运行的界限内执行循环体； （4）测试内部数据结构的有效性，等等； （5）`静态白盒测试`:即代码审查，正式审查和检验设计和程序代码； （6）`动态白盒测试`:利用查看代码功能和实现方式得到的信息来设计和执行测试，也叫结构测试； 白盒的测试用例技术包括`逻辑覆盖`和`基本路径测试`。 `逻辑覆盖`：是以程序内在逻辑结构为基础的测试用例设计技术，这一方法要求测试人员对程序的逻辑结构有清楚的了解。 `基本路径测试`：在程序控制流程图的基础上，通过分析控制构造的环路复杂性，导出基本可执行路径集合，从而设计测试用例。 二. 测试用例设计方法  常见的测试用例设计方法1 常见的测试用例设计方法2 常见的测试用例设计方法3 1.等价类划分\n `等价类`是指某个`输入域`的`子集合`.在该`子集合`中,各个`输入数据`对于揭露`程序中的错误`都是`等效的`.并合理地假定:`测试某等价类的代表值就等于对这一类其它值的测试`。 把输入数据合理地划分`等价类`，在每一个`等价类`中取一个`典型值`或`任意值`作为测试的`输入条件`，就**可以用少量的代表性的测试数据，取得更好的测试效果**。 `等级类划分`又分为：`有效等价类`和`无效等价类`  划分等价类的标准：\n 1)完备测试、避免冗余; 2)划分等价类重要的是：集合的划分，划分为互不相交的一组子集，而子集的并是整个集合; 3)并是整个集合：完备性; 4)子集互不相交：保证一种形式的无冗余性; 5)同一类中标识（选择）一个测试用例，同一等价类中，往往处理相同，相同处理映射到\u0026#34;相同的执行路径\u0026#34;。  ⚠️ 注意：软件不仅要能接收合理的数据，也要能经受意外的考验。因此在划分等价类的时候不仅要考虑合理的、有意义的输入数据构成的集合，还要考虑不合理的或无意义的输入数据所构成的集合。我们将前者称为有效等价类，它能验证需求是否实现，后者则为无效等价类，能检验是否会出现异常。无效等价类至少应有一个，也可能有多个，视具体情况而定。 划分等价类的方法\n 1)在输入条件规定了`取值范围或值的个数`的情况下,则可以确立`一`个`有效等价类`和`两`个`无效等价类`。如：输入值是学生成绩，范围是0～100； 2)在输入条件规定了输入值的集合或者规定了\u0026#34;必须如何\u0026#34;的条件的情况下,可确立一个`有效等价类`和一个`无效等价类`； 3)在输入条件是一个布尔值的情况下,可确定一个有效等价类和一个无效等价类。 4)在规定了输入数据的一组值（假定n个）,并且程序要对每一个输入值分别处理的情况下,可确立n个有效等价类和一个无效等价类。 **例：输入条件说明学历可为:专科、本科、硕士、博士四种之一，则分别取这四种这四个值作为四个有效等价类，另外把四种学历之外的任何学历作为无效等价类。** 5)在规定了输入数据必须遵守的规则的情况下,可确立一个有效等价类（符合规则）和若干个无效等价类（从不同角度违反规则）； 6)在确知已划分的等价类中各元素在程序处理中的方式不同的情况下,则应再将该等价类进一步的划分为更小的等价类。  EXAMPLE 需求：要求用户输入年份，年份限定在1980年~2020年，由4位数字表示。\n使用等价类划分法，首先确定有效等价类：4位数字字符且年份为1990~2020，然后确定无效等价类：如输入的类型和长度不合理，年份超出范围等，具体如下表所示： 年份限定在1980年~2020年\n\" 年份限定在1980年~2020年  设计测试用例\n在确立了等价类后,可建立等价类表,列出所有划分出的等价类输入条件：有效等价类、无效等价类，然后从划分出的等价类中按以下三个原则设计测试用例：\n 1)为每一个等价类规定一个唯一的编号； 2)设计一个新的测试用例,使其尽可能多地覆盖尚未被覆盖地有效等价类,重复这一步，直到所有的有效等价类都被覆盖为止； 3)设计一个新的测试用例,使其仅覆盖一个尚未被覆盖的无效等价类,重复这一步，直到所有的无效等价类都被覆盖为止。  2.边界值分析法\n 是等价类划分的`补充`。`测试经验`得知，错误更容易发生在`边界值`。所以`设计用例`应`重点测试边界`情况，如正好等于，刚刚大于，稍微小于。从`过往的经验`来看，大量的错误发生在`输入或输出范围的边界`上，而`不是在输入输出范围的内部`。因此针对各种`边界情况设计测试用例`，有很大的概率可以查出更多的错误。**这种对输入或输出的边界值进行测试的方法就是边界值法**, 边界值法多用于对数据进行测试，在数据测试的时候，除了要关注边界值还要关注`默认值`，`空白`，`空值`，`零值`和`无`。除上述`常规数据`外，`非常规的数据`还要关注`非法值`、`错误值`、`不正确值`和`垃圾数据`，即所有可能的`无效等价类数据`，要特别说明的是，使用`边界值法`不仅只考虑`输入数据`，也应该考虑`输出数据`。  3.因果图分析法 因果图分析法是一种图解法分析输入的各种组合情况，从而设计测试用例的方法。它适合于检查程序输入条件的各种组合情况。\n因果图法设计测试用例的步骤：\n 1、根据`程序规格说明书`描述的语义内容，分析并`确定“因”（即输入条件或输入条件的等价类）和“果”（即输出条件）`； 2、将“因”和“果”`表示成“因果图”`； 3、在`因果图`上使用`约束符号`来表明`约束条件`； 4、将得到的`因果图`转换成`判定表`； 5、根据`判定表`中`每一列`(无效情况除外)设计一个`测试用例`  4.判定表分析法 判定表是分析和表达``多逻辑条件下执行不同操作的情况的工具。组成：条件桩，动作桩，条件项，动作项。\n判定表分析法设计测试用例的步骤：\n 1、`列出`所有`条件桩`和`动作桩`。 2、`添入``条件项`和`动作项`。 3、生成`初始判定表`。 4、`简化合并`相似`规则`，形成`简化判定表`。  6.错误推测法 根据实际经验或推测分析列出所有可能存在的和容易发生错误的情况，并有针对性的设计测试用例。在测试程序时，人们可以根据经验或直觉推测程序中可能存在的各种错误，从而有针对性地编写检查这些错误的测试用例的方法，这种方法被称为错误推断法。\n例如:\n (1)类似模块曾出现的错误 (2)输入输出为0的情况 (3)上传表格无数据或有1条数据的情况 (4)sql查询条件有in的情况，条件为空的场合  7.场景分析法 指测试者根据用户场景模拟用户操作进行测试。 现在的软件几乎都是用事件触发来控制流程的，事件触发时的情景便形成了场景，而同一事件不同的触发顺序和处理结果就形成事件流。这种在软件设计方面的思想也可引入到软件测试中，可以比较生动地描绘出事件触发时的情景，有利于测试设用例场景用来描述流经用例的路径，从用例开始到结束遍历这条路径上所有基本流和备选流。\n步骤：\n 1) 画出需要测试路径的`流程图`(一般选择工具Office Visio) 2) 分析`基本流`和`备选流`和`异常流`,`基本流`表示通过业务流程时输入都正确，能达到目标；`备选流`表示通过业务流程时输入错误（或者操作错误）导致流程存在反复，但是经过纠正后仍能达到能达到目标；`异常流`是指通过业务流程时输入错误（或者操作错误）产生异常终止流程 。 3) 根据基本流和备选流设计测试用例  8.整个信息结构: 整个信息结构\n\" 整个信息结构 \n 二. 测试用例应该包含那些内容;要素?  1：用例编号\n测试用例编号是由字母和数字组合而成的，用例的编号应该具有唯一性（每个测试用例的唯一编号），易识别性，有助于其和测试结果、错误报告等其他文档的链接。这样看到编号就可以知道是做的什么测试，测试的对象是什么，也方便维护。\n2：测试模块\n你现在这个测试用例所测的项目名，可以是测试用例所属的大类，被测需求，被测的模块，或者是被测的单元,讲述此测试用例的大模块。\n3：用例的标题\n测试标题是对测试用例的简单描述。用概括的语言描述该测试用例的测试点。每个测试用例的标题不能够重复，因为每个测试用例的测试点事不一样的,用简单的一句话来描述此测试用例。\n4：测试级别\n按照测试用例的重要性来给不同的测试用例分级别,重要级别分为高中低三等：\n 高：保证系统基本功能、重要特性、实际使用频率比较高的用例； 中：重要程度介于高和低之间的测试用例； 低：实际使用频率不高，对系统业务功能影响不大的模块或功能的测试用例。  5：测试目的和条件\n描述设计此测试用例的目的是什么和执行此测试用例``之前需要做的准备。\n6:测试输入\n测试用例执行时，需要输入的外部信息, 测试人员执行测试所需的动作。\n7：操作步骤 执行当前测试用例所要经过的操作步骤，需要给出每一步操作的详细描述，测试人员根据测试用例操作步骤，完成测试用例的执行\n8：预期结果\n在检查点上待测功能应有的正常反应、运作或显示。\n 三. 做好测试用例的关键是什么？  关键在于：深刻了解产品需求、业务流程、业务逻辑，熟练使用常见的编写测试用例的方法，做好用例评审，写用例之前可以征询相关人员的意见。\n白盒测试用例设计的关键是以较少的用例覆盖尽可能多的内部程序逻辑结果。\n黑盒法用例设计的关键同样也是以较少的用例覆盖模块输出和输入接口。不可能做到完全测试，以最少的用例在合理的时间内发现最多的问题。\n 四. 所有面试题： 01、`您所熟悉的测试用例设计方法都有哪些？请分别以具体的例子来说明这些方法在测试用例设计工作中的应用。` 答：有黑盒和白盒两种测试种类，黑盒有等价类划分法，边界分析法，因果图法和错误猜测法。白盒有逻辑覆盖法，循环测试路径选择，基本路径测试。 例子：在一次输入多个条件的完整性查询中。利用等价类划分法则和边界分析法则，首先利用等价划分法，可以一个或多个结果是OK的测试用例，然后确认多个NG的测试用例，然后利用边界值分析法，可以对结果分别是OK和NG的测试用例进行扩展和补充。 02、`您认为做好测试用例设计工作的关键是什么？` 答：测试用例设计工作的关键是对可行的和不可行的都要考虑。 1，输入 2，详细的操作步骤 3，预期输出 4，实际输出。 03、`您在从事性能测试工作时，是否使用过一些测试工具？如果有，请试述该工具的工作原理，并以一个具体的工作中的例子描述该工具是如何在实际工作中应用的。` 答：有使用过LoadRunner，该工具能够录制测试人员的操作步骤，然后对这个操作步骤模拟出多个用户来播放出来。 1、Visural User Genertor 创建脚本，选择协议，录制操作，编辑操作。 2、中央控制器（Controller）调度虚拟用户，创建场景，选择脚本，建立虚拟用户，设计shedual，设置ip spoofer。 3、运行脚本。分析shedual。 4、分析测试结果。 04、`您认为性能测试工作的目的是什么？做好性能测试工作的关键是什么？` 答：性能测试工作的目的是检查系统是否满足在需求说明书中规定的性能，性能测试常常需要和强度测试结合起来，并常常要求同时进行软件和硬件的检测。 性能测试主要的关注对象是响应时间，吞吐量，占用内存大小（辅助存储区），处理精度等。 05、`在您以往的工作中，一条软件缺陷（或者叫Bug）记录都包含了哪些内容？如何提交高质量的软件缺陷（Bug）记录？` 答：检测时间，系统环境，硬件环境，严重程度，程式版本，确认人，功能模板，问题描述，详细操作步骤，是否会重现。 问题描述和详细操作步骤要尽可能详细。Bug应该尽量用书面语，对于严重程度比较高的缺陷要在相同环境下测试一遍。 在C\\S模式下，如果条件满足可以使用替换法来确认是client端的问题还是server端的问题。 06、`你对测试最大的兴趣在哪里？为什么？` 答：最大的兴趣就是具有挑战性。 因为我并不知道哪里会出现bug，在找到一个bug后会很高兴。并且测试需要很强的耐心和细心。我可以很容易的找到一些细节问题。 07、`测试活动中，如果发现需要文档不完善或者不准确，怎么处理？` 答：要及时的与项目经理进行沟通协调。要在邮件中详细的把不完善不准确的地方描述出来，并提出自己的意见。 08、`你认为做好测试计划工作的关键是什么？` 答：首先，要有一个明确的目标，详细的阅读需求文档说明。 其次，要对整个测试人员、测试时间、测试进度进行一个预估，并预先进行管理。 最后，要对整个测试流程设定一个规范，所有测试人员都按着规范做事，不能随心所欲的测试。 09、`软件配置管理工作开展的情况和认识？` 答：拿到一台裸机过后要安装客户需要的操作系统，并且安装一些所必须的软件。 10、`你觉得软件测试通过的标准应该是什么样的？` 答：测试用例完全执行，测试用例覆盖到所有的测试点，并且缺陷的密度达到客户的需求。 11、`软件测试的文档测试应当贯穿于软件生命周期的全过程，其中用户文档是文档测试的重点。那么软件系统的用户文档包括哪些？` 答：用户安装文档、用户配置文档、用户使用手册、联机指导等。 12、`简述软件系统中用户文档的测试要点？` 答：完整性：用户文档中功能的描述要完整的。不能让用户产生疑问。 一致性：用户文档中的功能描述要与实际软件中的功能一致。不能描述过盛。 易使用性：用户文档描述的内容要方便用户阅读并且能够让用户很清楚的知道如何操作。 图表：有的时候用图表描述会很明了。 13、`什么是系统瓶颈？` 答：系统瓶颈就是软件在一定的并发量、访问量下无法达到用户的需求。 比如说用户需要在10s内完成一个访问，但是每一次都要12s才能完成，这个就是性能瓶颈，有可能是程序本身的问题，也有可能和操作系统、软件相关。 14、`没有产品说明书和需求文档地情况下能够进行黑盒测试吗？` 答：可以。 这个情况下我们就要进行探索性测试，把软件当成用户需求，一步步进行测试。凭借经验判断功能正确与否，有的时候还可以与项目经理、开发人员一起进行交流沟通，从而进行更好的测试。 15、`为什么尽量不要让时间富裕的员工去做一些测试？` 首先，专业的测试人员是有一定的技能和耐心对软件一步一步进行测试。如果让时间充裕的员工去测试的话，他可能心思并不在测试上面。会很随意的、没有目标的进行测试。这样子的话测试并不完整，有的时候甚至很重要的bug都没法找出。所以还是需要专业的测试人员来进行测试的。 16、`完全测试程序是可能的吗？` 不可能 测试人员对程序进行测试，只能找出程序中的bug，但是并不能保证程序是没有bug的。 完全的测试要花费很多的人力财力，并且测试的数据量过大，很浪费时间。测试的结果还很多，有的都是类似的，没有必要进行相同的测试。所以完全测试是不可能的。 18、`软件测试的风险主要体现在哪里？` 主要体现在没法完全测试。有些问题可能隐藏在没有测到的地方。这样子就被忽略了。客户使用的时候并不熟悉软件是如何操作的。可能有的时候会误点点出问题。这样子的话我们就要承担很大的风险了。 发现的缺陷越多，说明软件缺陷越多吗？ 是的，通常如果发现一个缺陷的话，有的时候会发现很多类似的缺陷，因为由于开发人员的习惯，可能一个地方有错误，另外一个地方就会有相同的错误。 19、`所有的软件缺陷都能修复吗？所有的软件缺陷都要修复吗？` 从理论上来说所有的缺陷都是可以修复的，但是并不是所有的缺陷都要修复。 一些对于软件没有影响的、不影响使用的缺陷我们可以不用修复。因为修复些细小的缺陷也是需要花费很多时间。项目上面可能会因为时间问题而先忽略这些小缺陷。 20、`开发人员老是犯一些低级错误怎么解决？` 要在开发的前期就制定好一些编码规范，这样子可以减少很多因为个人习惯引起的错误。同时，测试人员在发现开发人员犯一些低级错误的时候不可以指责他们，要耐心的给他们指出错误所在。然后可以有开发人员自己进行测试，找出一些一眼看得出来是错误的地方。 21、`您在以往的测试工作中都曾经具体从事过哪些工作？其中最擅长哪部分工作？` 我一般都是做的Web测试，搭建测试环境，对于一个程序进行集成测试，系统测试，回归测试等。还要编写测试用例以及一些文档，用户使用手册，功能测试文档等等。最擅长的是功能测试。 22、`开发人员说不是bug时，你如何应付？` 首先把自己的理由告诉开发人员。在同开发人员沟通到底是不是bug，但是如果开发人员还是认为不是bug的话，就把这个问题提到项目经理处，同时附上自己的理由。有项目经理决定是否为bug。 23、`软件测试项目从什么时候开始为什么？` 一般软件测试越早展开越好，一般是从需要阶段就要进行软件测试。软件测试不仅是测试功能，对于需求文档一类的也要进行测试。越早的找出bug，就会减少后续开发人员修改程序的次数，并且可以降低成本，如果等整个软件开发的差不多了发现一个致命的错误的话，是需要花费很多时间和人力来重新修改的。如果在一开始就发现的话就不会出现这种情况了。 24、`你能不能说下你的3-5年的职业规划？` 首先，要巩固自己的测试基础知识，在基本知识扎实的情况下提高理解需求文档地能力。 其次，学习自动化测试工具，并将它运用到测试中。 然后，在测试技术达到一定程度后，要学会如何带领一个测试团队。 最后，争取在最快的时间内达到测试经理的水平。 25、`功能测试用例需要详细到什么程度才是合格的？` 测试用例覆盖到所有的测试点。 26、`一个缺陷测试报告的组成？` 缺陷编号、缺陷标题、缺陷描述、缺陷的优先级、缺陷的重要程度、缺陷所述的模块、缺陷所属的版本、缺陷所属的开发人员、输入数据、输出结果、缺陷分析等。 27、`测试用例通常包括哪些内容？` 用例编号、测试环境、用例标题、输入数据、预期结果等 28、`你都用什么测试方法？` 根据不同的系统和模块有不同的方法。主要是黑盒测试和白盒测试。 29、`软件的评审一般由哪些人员参加？其目的是什么？` 参加人员：客户、项目经理、开发人员、测试人员 目的：查看软件在未正式投入运行前是否还存在问题。对于不同软硬件平台能否正常运行，是否有与客户理解不一致的地方，同时可以对一些可以改进的地方再多加改进。 30、`什么是软件测试，软件测试的目的？` 软件测试是通过人工或者自动化的操作进行还没有商业化用途的程序，查看他们的功能是否满足客户需求。 目的：在最短时间内找出尽可能多的软件缺陷。 31、`什么是兼容性测试？` 兼容性测试是检查软件在不同软件平台，硬件平台上是否可以正常运行的测试。主要查看软件在不同操作系统、浏览器、数据库中是否运行正常。 32、`什么是软件测试？` 答：为了发现程序中的错误而执行程序的过程 33、`软件测试的对象有哪些？` 答：软件测试并不等于程序测试。软件测试应贯穿于软件定义与开发的整个期间。 需求分析、概要设计、详细设计以及程序编码等各阶段所得到的文档，包括需求规格说明、概要设计规格说明、详细设计规格说明以及源程序，都应成为软件测试的对象。 34、`当测试过程发生错误时，有哪几种解决办法？` 答：1）跳转到别的测试过程 2）调用一个能够清除错误的过程 3）退出过程，启用另一个 4）退出过程和应用程序，重新启动Windows，在失败的地方重新开始测试 35、`怎么才能够全面的测试到每一个点？` 答：测试的全面性主要需要在设计测试计划的时候考虑，从测试策略，产品需求等等多个角度考虑从而定义全部的测试点。 36、`开发与测试的关系？` 答：开发和测试是一个有机的整体。在产品发布之前，开发和测试是循环进行的，测出的缺陷要经开发人员修改后继续测试。在开发的同时测试经理开始编写测试用例，测试文档要参考开发文档，所以开发和测试是不可分割的，少了任何一个都不能开发出产品。 37、`测试活动中统计了哪些数据？` 答：工作量 bug数量 38、`进行测试时产生了哪些文档或记录？` 答：测试的整个过程有系统测试计划、系统测试用例、系统测试报告、缺陷报告、产品发布说明 在执行测试的过程中只有缺陷报告，这个还是用在缺陷管理工具中进行的，最后在工具中导出缺陷报告 39、`怎样做好测试计划？` 答：1）理解系统。从整个系统的高度了解被测系统必须满足的功能和非功能性需求。利用涉及整个系统的文档，形成对系统的整体了解。 2）及早介入。为了深入了解项目，测试人员应该在系统的开始阶段介入，可以增加对客户需求，客户问题，潜在风险以及最重要的功能方面的理解 3）测试期望。程序员的期望是什么？客户的期望是什么？销售对测试的期望又是什么？测试目标必须是绝对的，以免说不清是否达到目标。 4）吸取教训。把以前工作中学习到的经验教训运用过来，对确定测试策略很有作用。 5）工作量太小。完成测试需要多少工作量？需要多少人员？ 6）技术选择。系统会采取什么技术？系统会采用什么架构？这些信息有助于确定测试策略和测试工具。 7）时间表。系统开发和测试分配的时间有多长？截止日期是什么时候？ 40、`测试用例如何设计的？` 答：在测试用例的设计之前首先要仔细阅读开发的详细设计文档，充分了解产品的详细功能，不清楚的地方与开发人员进行沟通，搞懂每个功能，尽量详细到输入框、按钮等小功能，功能点清楚之后按照功能模块分类进行用例编写。在具体的用例设计中会运用到等价类边界值等黑盒测试方法 41、`简单概述缺陷报告，并说明包括哪些项？` 答：现在缺陷报告一般不再使用纸质档文档编写，而是专用测试管理工具（如TestDirector），这样便于缺陷管理。在这些工具中，每个缺陷作为一条记录输入指定的缺陷管理系统中。 缺陷报告包括：软件名称、版本号、功能模板、缺陷编号、对应的用例编号、编写时间、编写人、测试员、预期结果、实际结果、缺陷描述、严重级别、优先级别 42、`什么是bug？` 答：软件的bug指的是软件中（包括程序和文档）不符合用户需求的问题。 常见的软件bug分为以下三类： 没有实现的功能 完成了用户需求的功能，但是运行时会出现一些功能或性能上的问题 实现了用户不需求的多余功能 43、`开发人员修复缺陷后，如何保证不影响其他功能？` 答：重新执行用例、看是否出现错误结果。并对周围的一些相关功能点追加新的测试用例。 44、`什么时候功能测试？` 答：功能测试是在规定的一段时间内运行软件系统的所有功能，以验证这个软件系统有无严重错误。 45、`请问功能测试和性能测试的区别是什么？` 答：1）测试目的： 功能测试：检测实际软件的功能是否符合用户需求，测功能是不是全部实现，某个实现是不是有BUG。主要为了发现以下几类错误：A、是否有不正确或遗漏的功能？B、功能实现是否满足用户需求和系统设计的隐藏需求？C、能否正确接收输入？能否正确输出结果？ 性能测试：验证软件质量的三个质量特性，可靠性，正确性和效率。主要是测试产品的健壮性 2）测试方式： 功能测试按照系用例，按照系统需求说明书和测试用例，对产品的功能一步步进行测试。找出产品功能是否全部实现 性能测试：一般都使用性能工具对产品的健壮性进行评估。通过创建场景和虚拟用户模拟真实环境，进行压力测试和负载测试。 46、`为什么选择测试这行？` 答：它是一个新兴的行业，有发展潜力，而且很锻炼人，需要掌握更多的技能，比做开发要更全面。 ","permalink":"https://laokong4628.github.io/zh-cn/posts/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95.html/","tags":["软件测试"],"title":"软件测试"},{"categories":["面试相关问题"],"contents":"Getting started 一. 面试相关问题和试题  A.试题 1.\u0026gt;与\u0026gt;\u0026gt;的区别\n\u0026gt; 定向符[输出] 将字符写入到文本，并覆写原来的字符\n\u0026gt;\u0026gt; 定向符[输出] 将字符写入到文本，并追加到字符末尾\n\u0026lt; 定向符[输入] 配合set /p 使用时，从指定的文件中获取字符串 赋值给变量\n示例 [将1.txt中第1行内容赋值给变量 wind]\nset /p wind=\u0026lt;1.txt\n获取 1.txt 中的字符   for /f \u0026#34;skip=1 tokens=2,3* delims=,\u0026#34; %%i in (1.txt) do echo %%i  3.“IP地址/ 数字” 是什么意思？\n数字是子网掩码位（数），例如 192.168.5.12/21 ，说明子网掩码由21个1组成，即 子网掩码是：11111111 11111111 11111000 00000000 ，也就是255.255.248.0.\n 在一个网段中能够支持多少个主机使用呢？\n192.168.5.12/21\n8*4-21=11\n2^11-2\n主机数为：2n\n可用主机数为 : 2n-2\n 例如192.168.1.0/24能够支持多少个主机？\n2^8-2=254\n所以能支持254个IP地址\n4.pushd 和 popd \n切换当前目录\n   指令 详解     c: \u0026amp; cd/ \u0026amp; md mp3 在 C:/ 建立 mp3 文件夹   md d:/mp4 在 D:/ 建立 mp4 文件夹   cd /d d:/mp4 更改当前目录为 d:/mp4   pushd c:/mp3 保存当前目录，并切换当前目录为 c:/mp3   popd 恢复当前目录为刚才保存的 d:/mp4      5.对当前目录里所有的txt文件执行 find 命令\n for /r . %%i in (*.txt) do find \u0026#34;abc\u0026#34; %%i  6.DHCP：Dynamic Host Configuration Protocol 动态主机配置协议\n主要作用是集中的管理、分配IP地址，使网络环境中的主机动态的获得IP地址、Gateway地址、DNS服务器地址等信息，并能够提升地址的使用率。\n SQL Server是微软的一套数据库，可用于建立数据库逻辑,并将数据进行物理存放。该数据库包含所有管理、配置和报告数据。包含应用程序使用的所有表定义、索引、约束和数据库存储过程。\n7.call start\n1.调用结果不同:call多个进程变量互通。start只能把参数或变量传给被调用的批处理。\n2.调用方式不同:start批处理中调用外部程序的命令，该外部程序在新窗口中运行，批处理程序继续往下执行，不理会外部程序的运行状况\nCALL命令可以在批处理执行过程中调用另一个批处理，当另一个批处理执行完后，再继续执行原来的批处理 3.调用范围不同:CALL主要用来进行批处理的内部调用，start批处理中调用外部程序的命令。\n  8.网段\n1.网络地址=IP地址\u0026amp;子网掩码\n2.广播地址=IP地址|（！子网掩码）\n3.网段：网络地址相同的IP地址属于同一网段，即同一子网。\n4.网关：同一网段（子网）间终端可直接通信，如终端A和终端B；不在同一网段（子网）的终端不能直接通信，需要通过网关才能通信，如终端A和终端C。\nIP地址、子网掩码、网络地址、广播地址、网段、网关的关系    类别 终端A 终端B 终端C     IP地址 192.168.1.10 192.168.1.23 192.168.1.40   子网掩码 255.255.255.224 255.255.255.224 255.255.255.224   网络地址 192.168.1.0 192.168.1.0 192.168.1.32   广播地址 192.168.1.31 192.168.1.31 192.168.1.63   网段 192.168.1.0~192.168.1.31 192.168.1.0~192.168.1.31 192.168.1.31~192.168.1.63   网关 192.168.1.1 192.168.1.1 192.168.1.32     IP地址类别 IP地址类别\n\" IP地址类别 \n  9.进制转换\n二、八、十、十六进制之间关系的结构图： 二、八、十、十六进制之间关系的结构图\n\" 二、八、十、十六进制之间关系的结构图 \n注意：在数字后面加上不同的字母来表示不同的进位制。B（Binary)表示二进制，O（Octal）表示八进制，D（Decimal）或不加表示十进制，H（Hexadecimal）表示十六进制。例如：(101011)B=(53)O=(43)D=(2B)H\n(一) （二、八、十六进制） → （十进制）\n A.二进制 → 十进制\n方法：二进制数从低位到高位（即从右往左）计算，第0位的权值是2的0次方，第1位的权值是2的1次方，第2位的权值是2的2次方，依次递增下去，把最后的结果相加的值就是十进制的值了。\n例：将二进制的(101011)B转换为十进制的步骤如下：\n 1. 第0位 1 x 2^0 = 1； 2. 第1位 1 x 2^1 = 2； 3. 第2位 0 x 2^2 = 0； 4. 第3位 1 x 2^3 = 8； 5. 第4位 0 x 2^4 = 0； 6. 第5位 1 x 2^5 = 32； 7. 读数，把结果值相加，1+2+0+8+0+32=43，即(101011)B=(43)D。   B.八进制 → 十进制\n方法：八进制数从低位到高位（即从右往左）计算，第0位的权值是8的0次方，第1位的权值是8的1次方，第2位的权值是8的2次方，依次递增下去，把最后的结果相加的值就是十进制的值了。八进制就是逢8进1，八进制数采用 0～7这八数来表达一个数。\n例：将八进制的(53)O转换为十进制的步骤如下：\n 1. 第0位 3 x 8^0 = 3； 2. 第1位 5 x 8^1 = 40； 3. 读数，把结果值相加，3+40=43，即(53)O=(43)D。   B.十六进制 → 十进制\n方法：十六进制数从低位到高位（即从右往左）计算，第0位的权值是16的0次方，第1位的权值是16的1次方，第2位的权值是16的2次方，依次递增下去，把最后的结果相加的值就是十进制的值了。十六进制就是逢16进1，十六进制的16个数为0123456789ABCDEF。\n例：将十六进制的(2B)H转换为十进制的步骤如下：\n 1. 第0位 B x 16^0 = 11； 2. 第1位 2 x 16^1 = 32； 3. 读数，把结果值相加，11+32=43，即(2B)H=(43)D  (二) （十进制） → （二、八、十六进制）\n A.十进制 → 二进制\n方法：除2取余法，即每次将整数部分除以2，余数为该位权上的数，而商继续除以2，余数又为上一个位权上的数，这个步骤一直持续下去，直到商为0为止，最后读数时候，从最后一个余数读起，一直到最前面的一个余数。\n例：将十进制的(43)D转换为二进制的步骤如下：\n 1. 将商43除以2，商21余数为1； 2. 将商21除以2，商10余数为1； 3. 将商10除以2，商5余数为0； 4. 将商5除以2，商2余数为1； 5. 将商2除以2，商1余数为0； 6. 将商1除以2，商0余数为1； 7. 读数，因为最后一位是经过多次除以2才得到的，因此它是最高位，读数字从最后的余数向前读，101011，即(43)D=(101011)B。   B.十进制 → 八进制\n方法1：除8取余法，即每次将整数部分除以8，余数为该位权上的数，而商继续除以8，余数又为上一个位权上的数，这个步骤一直持续下去，直到商为0为止，最后读数时候，从最后一个余数起，一直到最前面的一个余数。方法2：使用间接法，先将十进制转换成二进制，然后将二进制又转换成八进制；\n例：将十进制的(796)D转换为八进制的步骤如下：\n 1. 将商796除以8，商99余数为4； 2. 将商99除以8，商12余数为3； 3. 将商12除以8，商1余数为4； 4. 将商1除以8，商0余数为1； 5. 读数，因为最后一位是经过多次除以8才得到的，因此它是最高位，读数字从最后的余数向前读，1434，即(796)D=(1434)O。   C.十进制 → 十六进制\n方法1：除16取余法，即每次将整数部分除以16，余数为该位权上的数，而商继续除以16，余数又为上一个位权上的数，这个步骤一直持续下去，直到商为0为止，最后读数时候，从最后一个余数起，一直到最前面的一个余数。方法2：使用间接法，先将十进制转换成二进制，然后将二进制又转换成十六进制；\n将十进制的(796)D转换为十六进制的步骤如下：\n 1. 将商796除以16，商49余数为12，对应十六进制的C； 2. 将商49除以16，商3余数为1； 3. 将商3除以16，商0余数为3； 4. 读数，因为最后一位是经过多次除以16才得到的，因此它是最高位，读数字从最后的余数向前读，31C，即(796)D=(31C)H。  (三) （二进制） ↔ （八、十六进制）\n A.二进制 → 八进制\n方法：取三合一法，即从二进制的小数点为分界点，向左（向右）每三位取成一位，接着将这三位二进制按权相加，然后，按顺序进行排列，小数点的位置不变，得到的数字就是我们所求的八进制数。如果向左（向右）取三位后，取到最高（最低）位时候，如果无法凑足三位，可以在小数点最左边（最右边），即整数的最高位（最低位）添0，凑足三位。\n例：将二进制的(11010111.0100111)B转换为八进制的步骤如下：\n 1. 小数点前111 = 7； 2. 010 = 2； 3. 11补全为011，011 = 3； 4. 小数点后010 = 2； 5. 011 = 3； 6. 1补全为100，100 = 4； 7. 读数，读数从高位到低位，即(11010111.0100111)B=(327.234)O。  二进制与八进制编码对应表：\n   二进制 八进制     000 0   001 1   010 2   011 3   100 4   101 5   110 6   111 7     B.八进制 → 二进制\n方法：取一分三法，即将一位八进制数分解成三位二进制数，用三位二进制按权相加去凑这位八进制数，小数点位置照旧。\n例：将八进制的(327)O转换为二进制的步骤如下：\n 1. 3 = 011； 2. 2 = 010； 3. 7 = 111； 4. 读数，读数从高位到低位，011010111，即(327)O=(11010111)B。   C.二进制 → 十六进制\n方法：取四合一法，即从二进制的小数点为分界点，向左（向右）每四位取成一位，接着将这四位二进制按权相加，然后，按顺序进行排列，小数点的位置不变，得到的数字就是我们所求的十六进制数。如果向左（向右）取四位后，取到最高（最低）位时候，如果无法凑足四位，可以在小数点最左边（最右边），即整数的最高位（最低位）添0，凑足四位。\n例：将二进制的(11010111)B转换为十六进制的步骤如下：\n 1. 0111 = 7； 2. 1101 = D； 3. 读数，读数从高位到低位，即(11010111)B=(D7)H。   D.十六进制 → 二进制\n方法：取一分四法，即将一位十六进制数分解成四位二进制数，用四位二进制按权相加去凑这位十六进制数，小数点位置照旧。\n例：将十六进制的(D7)H转换为二进制的步骤如下：\n 1. D = 1101； 2. 7 = 0111； 3. 读数，读数从高位到低位，即(D7)H=(11010111)B。  (四) （八进制） ↔ （十六进制）\n A.八进制 → 十六进制\n方法：将八进制转换为二进制，然后再将二进制转换为十六进制，小数点位置不变。\n例：将八进制的(327)O转换为十六进制的步骤如下：\n 1. 3 = 011； 2. 2 = 010； 3. 7 = 111； 4. 0111 = 7； 5. 1101 = D； 6. 读数，读数从高位到低位，D7，即(327)O=(D7)H。  (五) 扩展阅读\n 包含小数的进制换算：  (ABC.8C)H=10x16^2+11x16^1+12x16^0+8x16^-1+12x16^-2=2560+176+12+0.5+0.046875=(2748.546875)D\n负次幂的计算：  2^-5=2^(0-5)=2^0/2^5=1/2^5\n同底数幂相除，底数不变，指数相减，反过来\n我们需要了解一个数学关系，即23=8，24=16，而八进制和十六进制是用这关系衍生而来的，即用三位二进制表示一位八进制，用四位二进制表示一位十六进制数。接着，记住4个数字8、4、2、1（23=8、22=4、21=2、20=1）。  9.chmod\nchmod 644 chmod 644\n\" chmod 644  Chmod 777 MAX\nOthers Rights (o) Read (4) Write (2) Execute (1)\nGroup Rights (g) Read (40) Write (20) Execute (10)\nOwner Rights (u) Read (400) Write (200) Execute (100)\n9.tar中的参数 cvf,xvf,cvzf,zxvf的区别\ntar cvf etcbak.tar etc/ 打包一个tar\ntar xvf etcbak.tar 解开一个tar\ntar cvzf etcbak.tar.gz etc/ 打包压缩一个 tar\ntar zxvf etcbak.tar.gz 解压一个tar\n注意：\nc：是压缩，建立压缩档案\nx：解压缩，解压\nt：查看内容\nr：向压缩归档文件末尾追加文件\nu：更新原压缩包中的文件\nv：在压缩或解压缩过程中显示正在处理的文件名\nf：后面必须跟上要处理的文件名，参数-f是必须的\nz：通过gzip支持压缩或解压缩，有gzip属性的\nj：表示通过bzip2支持压缩或解压缩，有bz2属性的\nZ：有compress属性的\nO：将文件解开到标准输出\ntar -tf aaa.tar.gz ：在不解压的情况下查看压缩包的内容\n总结:\n 1、*.tar 用 tar –xvf 解压 2、*.gz 用 gzip -d或者gunzip 解压 3、*.tar.gz和*.tgz 用 tar –xzf 解压 4、*.bz2 用 bzip2 -d或者用bunzip2 解压 5、*.tar.bz2用tar –xjf 解压 6、*.Z 用 uncompress 解压 7、*.tar.Z 用tar –xZf 解压 ","permalink":"https://laokong4628.github.io/zh-cn/posts/%E9%9D%A2%E8%AF%95%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98.html/","tags":["面试相关问题"],"title":"面试相关问题"},{"categories":null,"contents":"  :(far fa-kiss-wink-heart fa-fw): laokong4628.github.io 是一个简洁、优雅且高效的笔记本，方便学习，记录，查询笔记。\n  网站的原型基于 LoveIt 主题 和 Hugo。 Hugo Theme LoveIt\n\" Hugo Theme LoveIt \n  ","permalink":"https://laokong4628.github.io/zh-cn/about/","tags":null,"title":"关于网站说明"},{"categories":null,"contents":"博客链接  雨临Lewis的博客 不想当写手的码农不是好咸鱼_(xз」∠)_     阳光派Plus’Blog 聪明的妖怪已经录下了唐僧的紧箍咒     北落师门 会者定离，一期一祈     BBing\u0026#39;s Blog 自由 分享 合作     Emil’s blog 这是一个分享IT技术的小站     木子の博客 积水成河，积土成山！    【十年之约】  【十年之约】 一个人的寂寞，一群人的狂欢    ","permalink":"https://laokong4628.github.io/zh-cn/friends/","tags":null,"title":"友链墙"},{"categories":null,"contents":"Qweather 天气 \u0026lt;div id=\u0026#34;he-plugin-standard\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; ","permalink":"https://laokong4628.github.io/zh-cn/weather/","tags":null,"title":"天气"},{"categories":null,"contents":"","permalink":"https://laokong4628.github.io/zh-cn/search/","tags":null,"title":"搜索"}]